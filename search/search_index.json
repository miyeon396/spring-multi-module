{"config":{"lang":["ko"],"separator":"[\\s\\-]+","pipeline":[" "]},"docs":[{"location":"","title":"Spring Multi-Module Project","text":"<p>Spring Boot 3.x\uc640 Java 21\uc744 \uc0ac\uc6a9\ud55c \uba40\ud2f0\ubaa8\ub4c8 \ud504\ub85c\uc81d\ud2b8\uc785\ub2c8\ub2e4.</p>"},{"location":"#_1","title":"\ud83d\udccb \ud504\ub85c\uc81d\ud2b8 \uac1c\uc694","text":"<p>\uc774 \ud504\ub85c\uc81d\ud2b8\ub294 Spring Boot \uae30\ubc18\uc758 \uba40\ud2f0\ubaa8\ub4c8 \uc544\ud0a4\ud14d\ucc98\ub97c \ubcf4\uc5ec\uc8fc\ub294 \uc608\uc81c \ud504\ub85c\uc81d\ud2b8\uc785\ub2c8\ub2e4. \uac01 \ubaa8\ub4c8\uc740 \ub3c5\ub9bd\uc801\uc778 \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\uba70, \uc11c\ub85c \uc758\uc874\uc131\uc744 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4.</p>"},{"location":"#_2","title":"\ud83c\udfd7\ufe0f \ubaa8\ub4c8 \uad6c\uc870","text":"<pre><code>spring-multi-module/\n\u251c\u2500\u2500 util-module/          # \uacf5\ud1b5 \uc720\ud2f8\ub9ac\ud2f0\n\u251c\u2500\u2500 encrypt-module/       # \uc554\ud638\ud654 \uae30\ub2a5\n\u2514\u2500\u2500 domain-module/        # \ub3c4\uba54\uc778 \ubaa8\ub378 \ubc0f \ube44\uc988\ub2c8\uc2a4 \ub85c\uc9c1\n</code></pre>"},{"location":"#util-module","title":"Util Module","text":"<p>\ubb38\uc790\uc5f4 \ucc98\ub9ac, \ub0a0\uc9dc/\uc2dc\uac04 \ucc98\ub9ac \ub4f1 \uacf5\ud1b5 \uc720\ud2f8\ub9ac\ud2f0 \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.</p> <ul> <li>StringUtils: \ubb38\uc790\uc5f4 \ucc98\ub9ac \uc720\ud2f8\ub9ac\ud2f0</li> <li>DateTimeUtils: \ub0a0\uc9dc/\uc2dc\uac04 \ucc98\ub9ac \uc720\ud2f8\ub9ac\ud2f0</li> </ul> <p>\uc790\uc138\ud788 \ubcf4\uae30 | API \ubb38\uc11c</p>"},{"location":"#encrypt-module","title":"Encrypt Module","text":"<p>\uc554\ud638\ud654, \ubcf5\ud638\ud654, \ud574\uc2dc \uc0dd\uc131 \ub4f1 \ubcf4\uc548 \uad00\ub828 \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.</p> <ul> <li>AesEncryptionService: AES \uc554\ud638\ud654/\ubcf5\ud638\ud654</li> <li>HashService: \ud574\uc2dc \uc0dd\uc131 (SHA-256, MD5, Base64)</li> </ul> <p>\uc790\uc138\ud788 \ubcf4\uae30 | API \ubb38\uc11c</p>"},{"location":"#domain-module","title":"Domain Module","text":"<p>\uc0ac\uc6a9\uc790 \uad00\ub9ac\ub97c \uc704\ud55c \ub3c4\uba54\uc778 \ubaa8\ub378, \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac, \uc11c\ube44\uc2a4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.</p> <ul> <li>User: \uc0ac\uc6a9\uc790 \uc5d4\ud2f0\ud2f0</li> <li>UserRepository: \uc0ac\uc6a9\uc790 \ub370\uc774\ud130 \uc561\uc138\uc2a4</li> <li>UserService: \uc0ac\uc6a9\uc790 \ube44\uc988\ub2c8\uc2a4 \ub85c\uc9c1</li> </ul> <p>\uc790\uc138\ud788 \ubcf4\uae30 | API \ubb38\uc11c</p>"},{"location":"#_3","title":"\ud83d\ude80 \ube60\ub978 \uc2dc\uc791","text":""},{"location":"#_4","title":"\uc694\uad6c\uc0ac\ud56d","text":"<ul> <li>Java 21 \uc774\uc0c1</li> <li>Gradle 8.5 \uc774\uc0c1</li> </ul>"},{"location":"#_5","title":"\ube4c\ub4dc","text":"<pre><code>./gradlew build\n</code></pre>"},{"location":"#javadoc","title":"Javadoc \uc0dd\uc131","text":"<pre><code># \ubaa8\ub4e0 \ubaa8\ub4c8\uc758 Javadoc \uc0dd\uc131\n./gradlew generateAllJavadocs\n\n# \ud2b9\uc815 \ubaa8\ub4c8\uc758 Javadoc \uc0dd\uc131\n./gradlew :util-module:generateModuleJavadoc\n./gradlew :encrypt-module:generateModuleJavadoc\n./gradlew :domain-module:generateModuleJavadoc\n\n# \ud1b5\ud569 Javadoc \uc0dd\uc131\n./gradlew generateAggregatedJavadoc\n</code></pre> <p>\uc0dd\uc131\ub41c Javadoc\uc740 <code>docs/javadoc/</code> \ub514\ub809\ud1a0\ub9ac\uc5d0 \uc800\uc7a5\ub429\ub2c8\ub2e4.</p>"},{"location":"#_6","title":"\ud83d\udcda \ubb38\uc11c","text":"<ul> <li>\uc2dc\uc791\ud558\uae30</li> <li>\ubaa8\ub4c8 \uac00\uc774\ub4dc</li> <li>\uac1c\ubc1c \uac00\uc774\ub4dc</li> <li>API \ubb38\uc11c</li> </ul>"},{"location":"#_7","title":"\ud83e\udd1d \uae30\uc5ec\ud558\uae30","text":"<p>\ud504\ub85c\uc81d\ud2b8\uc5d0 \uae30\uc5ec\ud558\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74 \uae30\uc5ec \uac00\uc774\ub4dc\ub97c \ucc38\uace0\ud574\uc8fc\uc138\uc694.</p>"},{"location":"#_8","title":"\ud83d\udcdd \ub77c\uc774\uc13c\uc2a4","text":"<p>\uc774 \ud504\ub85c\uc81d\ud2b8\ub294 MIT \ub77c\uc774\uc13c\uc2a4\ub97c \ub530\ub985\ub2c8\ub2e4.</p>"},{"location":"contributing/","title":"\uae30\uc5ec\ud558\uae30","text":"<p>Spring Multi-Module \ud504\ub85c\uc81d\ud2b8\uc5d0 \uae30\uc5ec\ud574 \uc8fc\uc154\uc11c \uac10\uc0ac\ud569\ub2c8\ub2e4! \ud83c\udf89</p>"},{"location":"contributing/#_2","title":"\ud83e\udd1d \uae30\uc5ec \ubc29\ubc95","text":""},{"location":"contributing/#1","title":"1. \uc774\uc288 \uc0dd\uc131","text":"<p>\ubc84\uadf8 \ub9ac\ud3ec\ud2b8\ub098 \uae30\ub2a5 \uc81c\uc548\uc740 GitHub Issues\uc5d0\uc11c \uc0dd\uc131\ud574\uc8fc\uc138\uc694.</p>"},{"location":"contributing/#_3","title":"\ubc84\uadf8 \ub9ac\ud3ec\ud2b8 \ud15c\ud50c\ub9bf","text":"<pre><code>## \ubc84\uadf8 \uc124\uba85\n[\ubc84\uadf8\uc5d0 \ub300\ud55c \uba85\ud655\ud558\uace0 \uac04\uacb0\ud55c \uc124\uba85]\n\n## \uc7ac\ud604 \ubc29\ubc95\n1. ...\n2. ...\n3. ...\n\n## \uc608\uc0c1 \ub3d9\uc791\n[\uc608\uc0c1\ud588\ub358 \ub3d9\uc791 \uc124\uba85]\n\n## \uc2e4\uc81c \ub3d9\uc791\n[\uc2e4\uc81c\ub85c \ubc1c\uc0dd\ud55c \ub3d9\uc791 \uc124\uba85]\n\n## \ud658\uacbd\n- OS: [\uc608: Ubuntu 22.04]\n- Java \ubc84\uc804: [\uc608: 21.0.1]\n- Gradle \ubc84\uc804: [\uc608: 8.5]\n\n## \ucd94\uac00 \uc815\ubcf4\n[\uc2a4\ud06c\ub9b0\uc0f7, \ub85c\uadf8 \ub4f1]\n</code></pre>"},{"location":"contributing/#_4","title":"\uae30\ub2a5 \uc81c\uc548 \ud15c\ud50c\ub9bf","text":"<pre><code>## \uae30\ub2a5 \uc124\uba85\n[\uc81c\uc548\ud558\ub294 \uae30\ub2a5\uc5d0 \ub300\ud55c \uc124\uba85]\n\n## \ub3d9\uae30\n[\uc774 \uae30\ub2a5\uc774 \uc65c \ud544\uc694\ud55c\uc9c0]\n\n## \uc608\uc0c1 \uad6c\ud604\n[\uc5b4\ub5bb\uac8c \uad6c\ud604\ub420 \uc218 \uc788\ub294\uc9c0]\n\n## \ub300\uc548\n[\uace0\ub824\ud55c \ub2e4\ub978 \ub300\uc548\ub4e4]\n</code></pre>"},{"location":"contributing/#2-fork-clone","title":"2. Fork &amp; Clone","text":"<pre><code># Fork \uc800\uc7a5\uc18c\ub97c \ub85c\uceec\uc5d0 \ud074\ub860\ngit clone https://github.com/your-username/spring-multi-module.git\ncd spring-multi-module\n\n# \uc6d0\ubcf8 \uc800\uc7a5\uc18c\ub97c upstream\uc73c\ub85c \ucd94\uac00\ngit remote add upstream https://github.com/yourusername/spring-multi-module.git\n</code></pre>"},{"location":"contributing/#3","title":"3. \ube0c\ub79c\uce58 \uc0dd\uc131","text":"<pre><code># \ucd5c\uc2e0 \ucf54\ub4dc\ub85c \uc5c5\ub370\uc774\ud2b8\ngit checkout main\ngit pull upstream main\n\n# \uc0c8 \ube0c\ub79c\uce58 \uc0dd\uc131\ngit checkout -b feature/your-feature-name\n# \ub610\ub294\ngit checkout -b fix/bug-description\n</code></pre> <p>\ube0c\ub79c\uce58 \uba85\uba85 \uaddc\uce59: - <code>feature/\uae30\ub2a5\uba85</code>: \uc0c8\ub85c\uc6b4 \uae30\ub2a5 - <code>fix/\ubc84\uadf8\uba85</code>: \ubc84\uadf8 \uc218\uc815 - <code>docs/\ubb38\uc11c\uba85</code>: \ubb38\uc11c \uc218\uc815 - <code>refactor/\ub0b4\uc6a9</code>: \ub9ac\ud329\ud1a0\ub9c1 - <code>test/\ud14c\uc2a4\ud2b8\uba85</code>: \ud14c\uc2a4\ud2b8 \ucd94\uac00/\uc218\uc815</p>"},{"location":"contributing/#4","title":"4. \ucf54\ub4dc \uc791\uc131","text":"<ul> <li>\ucf54\ub529 \ucee8\ubca4\uc158 \uc900\uc218</li> <li>\uc758\ubbf8 \uc788\ub294 \ucee4\ubc0b \uba54\uc2dc\uc9c0 \uc791\uc131</li> <li>\ud14c\uc2a4\ud2b8 \ucf54\ub4dc \uc791\uc131</li> </ul>"},{"location":"contributing/#5","title":"5. \ud14c\uc2a4\ud2b8 \uc2e4\ud589","text":"<pre><code># \uc804\uccb4 \ud14c\uc2a4\ud2b8\n./gradlew test\n\n# \ucf54\ub4dc \uc2a4\ud0c0\uc77c \uac80\uc0ac\n./gradlew checkstyleMain checkstyleTest\n\n# \ucee4\ubc84\ub9ac\uc9c0 \ud655\uc778\n./gradlew jacocoTestReport\n</code></pre>"},{"location":"contributing/#6","title":"6. \ucee4\ubc0b","text":"<p>\ucee4\ubc0b \uba54\uc2dc\uc9c0 \ucee8\ubca4\uc158:</p> <pre><code>&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;\n\n&lt;body&gt;\n\n&lt;footer&gt;\n</code></pre> <p>Type: - <code>feat</code>: \uc0c8\ub85c\uc6b4 \uae30\ub2a5 - <code>fix</code>: \ubc84\uadf8 \uc218\uc815 - <code>docs</code>: \ubb38\uc11c \uc218\uc815 - <code>style</code>: \ucf54\ub4dc \ud3ec\ub9f7\ud305 - <code>refactor</code>: \ub9ac\ud329\ud1a0\ub9c1 - <code>test</code>: \ud14c\uc2a4\ud2b8 \ucd94\uac00/\uc218\uc815 - <code>chore</code>: \ube4c\ub4dc \uc791\uc5c5, \ud328\ud0a4\uc9c0 \ub9e4\ub2c8\uc800 \uc124\uc815 \ub4f1</p> <p>\uc608\uc2dc:</p> <pre><code>git commit -m \"feat(encrypt): Add RSA encryption support\n\n- Implement RSA key generation\n- Add encrypt/decrypt methods\n- Include unit tests\n\nCloses #123\"\n</code></pre>"},{"location":"contributing/#7-push-pull-request","title":"7. Push &amp; Pull Request","text":"<pre><code># \ubcc0\uacbd\uc0ac\ud56d \ud478\uc2dc\ngit push origin feature/your-feature-name\n</code></pre> <p>GitHub\uc5d0\uc11c Pull Request \uc0dd\uc131:</p> <ol> <li>Fork\ud55c \uc800\uc7a5\uc18c\ub85c \uc774\ub3d9</li> <li>\"Compare &amp; pull request\" \ud074\ub9ad</li> <li>PR \ud15c\ud50c\ub9bf \uc791\uc131</li> <li>\"Create pull request\" \ud074\ub9ad</li> </ol>"},{"location":"contributing/#pr","title":"PR \ud15c\ud50c\ub9bf","text":"<pre><code>## \ubcc0\uacbd\uc0ac\ud56d\n[\ubb34\uc5c7\uc744 \ubcc0\uacbd\ud588\ub294\uc9c0 \uc124\uba85]\n\n## \ubcc0\uacbd \uc774\uc720\n[\uc65c \uc774 \ubcc0\uacbd\uc774 \ud544\uc694\ud55c\uc9c0]\n\n## \uad00\ub828 \uc774\uc288\nCloses #\uc774\uc288\ubc88\ud638\n\n## \ud14c\uc2a4\ud2b8\n- [ ] \ub2e8\uc704 \ud14c\uc2a4\ud2b8 \ucd94\uac00/\uc218\uc815\n- [ ] \ud1b5\ud569 \ud14c\uc2a4\ud2b8 \ucd94\uac00/\uc218\uc815\n- [ ] \uc218\ub3d9 \ud14c\uc2a4\ud2b8 \uc644\ub8cc\n\n## \uccb4\ud06c\ub9ac\uc2a4\ud2b8\n- [ ] \ucf54\ub529 \ucee8\ubca4\uc158 \uc900\uc218\n- [ ] Javadoc \uc791\uc131\n- [ ] \ud14c\uc2a4\ud2b8 \uc791\uc131\n- [ ] \ubb38\uc11c \uc5c5\ub370\uc774\ud2b8\n- [ ] \ucee4\ubc84\ub9ac\uc9c0 80% \uc774\uc0c1\n\n## \uc2a4\ud06c\ub9b0\uc0f7 (\ud574\ub2f9\ud558\ub294 \uacbd\uc6b0)\n[\uc2a4\ud06c\ub9b0\uc0f7 \ucca8\ubd80]\n</code></pre>"},{"location":"contributing/#_5","title":"\ud83d\udccb \uac1c\ubc1c \uac00\uc774\ub4dc\ub77c\uc778","text":""},{"location":"contributing/#_6","title":"\ucf54\ub4dc \ud488\uc9c8","text":"<ol> <li>\ucf54\ub529 \uc2a4\ud0c0\uc77c</li> <li>Java \ucf54\ub529 \ucee8\ubca4\uc158 \uc900\uc218</li> <li>\uc77c\uad00\ub41c \ub4e4\uc5ec\uc4f0\uae30 (4\uce78 \uacf5\ubc31)</li> <li> <p>\uc758\ubbf8 \uc788\ub294 \ubcc0\uc218\uba85 \uc0ac\uc6a9</p> </li> <li> <p>Javadoc</p> </li> <li>\ubaa8\ub4e0 public \ud074\ub798\uc2a4/\uba54\uc11c\ub4dc\uc5d0 Javadoc \uc791\uc131</li> <li>\ub9e4\uac1c\ubcc0\uc218, \ubc18\ud658\uac12, \uc608\uc678 \ubb38\uc11c\ud654</li> <li> <p>\uc0ac\uc6a9 \uc608\uc81c \ud3ec\ud568 (\uac00\ub2a5\ud55c \uacbd\uc6b0)</p> </li> <li> <p>\ud14c\uc2a4\ud2b8</p> </li> <li>\uc0c8\ub85c\uc6b4 \uae30\ub2a5\uc5d0\ub294 \ud14c\uc2a4\ud2b8 \ud544\uc218</li> <li>\ucee4\ubc84\ub9ac\uc9c0 80% \uc774\uc0c1 \uc720\uc9c0</li> <li>Given-When-Then \ud328\ud134 \uc0ac\uc6a9</li> </ol>"},{"location":"contributing/#_7","title":"\ubaa8\ub4c8 \ucd94\uac00","text":"<p>\uc0c8\ub85c\uc6b4 \ubaa8\ub4c8\uc744 \ucd94\uac00\ud558\ub294 \uacbd\uc6b0:</p> <ol> <li><code>settings.gradle</code>\uc5d0 \ubaa8\ub4c8 \ucd94\uac00</li> <li>\ubaa8\ub4c8 <code>build.gradle</code> \uc791\uc131</li> <li>\ud328\ud0a4\uc9c0 \uad6c\uc870 \uc0dd\uc131</li> <li>\ubaa8\ub4c8 \ubb38\uc11c \uc791\uc131 (<code>docs/modules/</code>)</li> <li><code>mkdocs.yml</code>\uc5d0 \ub124\ube44\uac8c\uc774\uc158 \ucd94\uac00</li> </ol>"},{"location":"contributing/#_8","title":"\ubb38\uc11c\ud654","text":"<ol> <li>\ubaa8\ub4c8 \ubb38\uc11c</li> <li>\uac01 \ubaa8\ub4c8\uc758 \ubaa9\uc801\uacfc \uc0ac\uc6a9\ubc95 \uc124\uba85</li> <li>\ucf54\ub4dc \uc608\uc81c \ud3ec\ud568</li> <li> <p>API \ubb38\uc11c \ub9c1\ud06c \ucd94\uac00</p> </li> <li> <p>Javadoc \uc0dd\uc131 <pre><code>./gradlew generateAllJavadocs\n</code></pre></p> </li> <li> <p>MkDocs \ubbf8\ub9ac\ubcf4\uae30 <pre><code>mkdocs serve\n</code></pre></p> </li> </ol>"},{"location":"contributing/#_9","title":"\ud83d\udd0d \ucf54\ub4dc \ub9ac\ubdf0 \ud504\ub85c\uc138\uc2a4","text":"<ol> <li>\uc790\ub3d9 \uac80\uc0ac</li> <li>CI/CD \ud30c\uc774\ud504\ub77c\uc778 \ud1b5\uacfc</li> <li>\ud14c\uc2a4\ud2b8 \uc131\uacf5</li> <li> <p>\ucf54\ub4dc \uc2a4\ud0c0\uc77c \uac80\uc0ac \ud1b5\uacfc</p> </li> <li> <p>\ub9ac\ubdf0\uc5b4 \uac80\ud1a0</p> </li> <li>\ucf54\ub4dc \ud488\uc9c8</li> <li>\ud14c\uc2a4\ud2b8 \ucee4\ubc84\ub9ac\uc9c0</li> <li>\ubb38\uc11c \uc644\uc131\ub3c4</li> <li> <p>\uc544\ud0a4\ud14d\ucc98 \uc77c\uad00\uc131</p> </li> <li> <p>\ud53c\ub4dc\ubc31 \ubc18\uc601</p> </li> <li>\ub9ac\ubdf0 \ucf54\uba58\ud2b8 \ud655\uc778</li> <li>\uc218\uc815 \ud6c4 \uc7ac\ud478\uc2dc</li> <li>\uc2b9\uc778 \ud6c4 \uba38\uc9c0</li> </ol>"},{"location":"contributing/#_10","title":"\ud83c\udfa8 \ucee4\ubc0b \uc544\uc774\ucf58","text":"<p>\ucee4\ubc0b \uba54\uc2dc\uc9c0\uc5d0 \uc774\ubaa8\uc9c0 \uc0ac\uc6a9 (\uc120\ud0dd\uc0ac\ud56d):</p> <ul> <li>\u2728 <code>:sparkles:</code> \uc0c8\ub85c\uc6b4 \uae30\ub2a5</li> <li>\ud83d\udc1b <code>:bug:</code> \ubc84\uadf8 \uc218\uc815</li> <li>\ud83d\udcdd <code>:memo:</code> \ubb38\uc11c \ucd94\uac00/\uc218\uc815</li> <li>\ud83c\udfa8 <code>:art:</code> \ucf54\ub4dc \ud3ec\ub9f7\ud305</li> <li>\u267b\ufe0f <code>:recycle:</code> \ub9ac\ud329\ud1a0\ub9c1</li> <li>\u2705 <code>:white_check_mark:</code> \ud14c\uc2a4\ud2b8 \ucd94\uac00</li> <li>\ud83d\udd27 <code>:wrench:</code> \uc124\uc815 \ud30c\uc77c \uc218\uc815</li> <li>\ud83d\ude80 <code>:rocket:</code> \uc131\ub2a5 \uac1c\uc120</li> </ul>"},{"location":"contributing/#_11","title":"\ud83d\udcac \ucee4\ubba4\ub2c8\ucf00\uc774\uc158","text":""},{"location":"contributing/#_12","title":"\uc9c8\ubb38\ud558\uae30","text":"<p>\uc9c8\ubb38\uc774 \uc788\uc73c\uc2dc\uba74:</p> <ol> <li>\uba3c\uc800 \ubb38\uc11c\uc640 \uc774\uc288\ub97c \uac80\uc0c9</li> <li>\uae30\uc874 \uc774\uc288\uac00 \uc5c6\uc73c\uba74 \uc0c8 \uc774\uc288 \uc0dd\uc131</li> <li>Discord/Slack \ucc44\ub110 \ud65c\uc6a9 (\uc788\ub294 \uacbd\uc6b0)</li> </ol>"},{"location":"contributing/#_13","title":"\ud1a0\ub860 \ucc38\uc5ec","text":"<ul> <li>GitHub Discussions\uc5d0\uc11c \uc758\uacac \uacf5\uc720</li> <li>PR \ub9ac\ubdf0\uc5d0 \uc801\uadf9 \ucc38\uc5ec</li> <li>\ub2e4\ub978 \uae30\uc5ec\uc790\ub4e4\uacfc \ud611\uc5c5</li> </ul>"},{"location":"contributing/#_14","title":"\ud83d\udcdc \ud589\ub3d9 \uac15\ub839","text":""},{"location":"contributing/#_15","title":"\uc6b0\ub9ac\uc758 \uc57d\uc18d","text":"<p>\ubaa8\ub450\uac00 \ud658\uc601\ubc1b\ub294 \ucee4\ubba4\ub2c8\ud2f0\ub97c \ub9cc\ub4e4\uae30 \uc704\ud574:</p> <ul> <li>\uc874\uc911\ud558\uace0 \ud3ec\uc6a9\uc801\uc778 \uc5b8\uc5b4 \uc0ac\uc6a9</li> <li>\ub2e4\ub978 \uad00\uc810\uacfc \uacbd\ud5d8 \uc874\uc911</li> <li>\uac74\uc124\uc801\uc778 \ube44\ud310 \uc218\uc6a9</li> <li>\ucee4\ubba4\ub2c8\ud2f0\uc5d0 \ucd5c\uc120\uc778 \uac83\uc5d0 \uc9d1\uc911</li> </ul>"},{"location":"contributing/#_16","title":"\uae08\uc9c0 \ud589\ub3d9","text":"<ul> <li>\uc131\uc801\uc778 \uc5b8\uc5b4/\uc774\ubbf8\uc9c0 \uc0ac\uc6a9</li> <li>\ubaa8\uc695\uc801/\uacbd\uba78\uc801 \ubc1c\uc5b8</li> <li>\uad34\ub86d\ud798 (\uacf5\uac1c/\ube44\uacf5\uac1c)</li> <li>\uac1c\uc778\uc815\ubcf4 \ubb34\ub2e8 \uacf5\uac1c</li> <li>\ube44\uc804\ubb38\uc801 \ud589\ub3d9</li> </ul>"},{"location":"contributing/#_17","title":"\ud83c\udfc6 \uae30\uc5ec\uc790 \uc778\uc815","text":"<p>\ubaa8\ub4e0 \uae30\uc5ec\uc790\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \uc778\uc815\ub429\ub2c8\ub2e4:</p> <ul> <li>README.md\uc758 Contributors \uc139\uc158\uc5d0 \ucd94\uac00</li> <li>\ub9b4\ub9ac\uc2a4 \ub178\ud2b8\uc5d0 \uae30\uc5ec \ub0b4\uc6a9 \uba85\uc2dc</li> <li>\ud2b9\ubcc4\ud55c \uae30\uc5ec\uc5d0 \ub300\ud55c \ubc30\uc9c0 \ubd80\uc5ec</li> </ul>"},{"location":"contributing/#_18","title":"\ud83d\udcde \ub3c4\uc6c0\uc774 \ud544\uc694\ud558\uc2e0\uac00\uc694?","text":"<ul> <li>\ud83d\udce7 Email: team@example.com</li> <li>\ud83d\udcac Discussions: GitHub Discussions</li> <li>\ud83d\udc1b Issues: GitHub Issues</li> </ul>"},{"location":"contributing/#_19","title":"\ud83d\ude4f \uac10\uc0ac\ud569\ub2c8\ub2e4!","text":"<p>\uc5ec\ub7ec\ubd84\uc758 \uae30\uc5ec\uac00 \uc774 \ud504\ub85c\uc81d\ud2b8\ub97c \ub354 \uc88b\uac8c \ub9cc\ub4ed\ub2c8\ub2e4. \uc791\uc740 \uae30\uc5ec\ub77c\ub3c4 \ud070 \ucc28\uc774\ub97c \ub9cc\ub4ed\ub2c8\ub2e4!</p>"},{"location":"development/architecture/","title":"\uc544\ud0a4\ud14d\ucc98 \uac00\uc774\ub4dc","text":"<p>Spring Multi-Module \ud504\ub85c\uc81d\ud2b8\uc758 \uc544\ud0a4\ud14d\ucc98\uc640 \uc124\uacc4 \uc6d0\uce59\uc744 \uc124\uba85\ud569\ub2c8\ub2e4.</p>"},{"location":"development/architecture/#_2","title":"\ud83c\udfd7\ufe0f \uc804\uccb4 \uc544\ud0a4\ud14d\ucc98","text":""},{"location":"development/architecture/#_3","title":"\uacc4\uce35 \uad6c\uc870","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502         Application Layer               \u2502\n\u2502  (\uc0ac\uc6a9\uc790 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub610\ub294 API)            \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n               \u2502\n               \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502         Domain Module                   \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n\u2502  \u2502 Service Layer                    \u2502   \u2502\n\u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524   \u2502\n\u2502  \u2502 Repository Layer                 \u2502   \u2502\n\u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524   \u2502\n\u2502  \u2502 Entity Layer                     \u2502   \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n               \u2502\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u25bc                     \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510        \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Encrypt  \u2502        \u2502   Util   \u2502\n\u2502  Module  \u2502\u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2502  Module  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"development/architecture/#_4","title":"\ud83d\udce6 \ubaa8\ub4c8\ubcc4 \ucc45\uc784","text":""},{"location":"development/architecture/#util-module","title":"Util Module (\uae30\ubc18 \uacc4\uce35)","text":"<p>\ubaa9\uc801: \uacf5\ud1b5 \uc720\ud2f8\ub9ac\ud2f0 \uae30\ub2a5 \uc81c\uacf5</p> <p>\ucc45\uc784: - \ubb38\uc790\uc5f4 \ucc98\ub9ac - \ub0a0\uc9dc/\uc2dc\uac04 \ucc98\ub9ac - \uae30\ud0c0 \ubc94\uc6a9 \uc720\ud2f8\ub9ac\ud2f0</p> <p>\uc758\uc874\uc131: \uc5c6\uc74c (\ucd5c\ud558\uc704 \ubaa8\ub4c8)</p> <p>\uc124\uacc4 \uc6d0\uce59: - \uc21c\uc218 \ud568\uc218 \uc911\uc2ec \uc124\uacc4 - \uc678\ubd80 \uc758\uc874\uc131 \ucd5c\uc18c\ud654 - \uc7ac\uc0ac\uc6a9\uc131 \uadf9\ub300\ud654</p>"},{"location":"development/architecture/#encrypt-module","title":"Encrypt Module (\ubcf4\uc548 \uacc4\uce35)","text":"<p>\ubaa9\uc801: \uc554\ud638\ud654 \ubc0f \ubcf4\uc548 \uae30\ub2a5 \uc81c\uacf5</p> <p>\ucc45\uc784: - \ub370\uc774\ud130 \uc554\ud638\ud654/\ubcf5\ud638\ud654 - \ud574\uc2dc \uc0dd\uc131 - \uc778\ucf54\ub529/\ub514\ucf54\ub529</p> <p>\uc758\uc874\uc131: Util Module</p> <p>\uc124\uacc4 \uc6d0\uce59: - \ubcf4\uc548 \ud45c\uc900 \uc900\uc218 - \uc54c\uace0\ub9ac\uc998 \ucd94\uc0c1\ud654 - \ud655\uc7a5 \uac00\ub2a5\ud55c \uc124\uacc4</p>"},{"location":"development/architecture/#domain-module","title":"Domain Module (\ube44\uc988\ub2c8\uc2a4 \uacc4\uce35)","text":"<p>\ubaa9\uc801: \ube44\uc988\ub2c8\uc2a4 \ub85c\uc9c1 \ubc0f \ub3c4\uba54\uc778 \ubaa8\ub378</p> <p>\ucc45\uc784: - \uc5d4\ud2f0\ud2f0 \uc815\uc758 - \ube44\uc988\ub2c8\uc2a4 \ub85c\uc9c1 \uad6c\ud604 - \ub370\uc774\ud130 \uc561\uc138\uc2a4</p> <p>\uc758\uc874\uc131: Util Module, Encrypt Module</p> <p>\uc124\uacc4 \uc6d0\uce59: - DDD(Domain-Driven Design) \uc6d0\uce59 - \uacc4\uce35 \ubd84\ub9ac (Entity, Repository, Service) - \ud2b8\ub79c\uc7ad\uc158 \uad00\ub9ac</p>"},{"location":"development/architecture/#_5","title":"\ud83d\udd04 \uc758\uc874\uc131 \uad00\ub9ac","text":""},{"location":"development/architecture/#_6","title":"\uc758\uc874\uc131 \ubc29\ud5a5","text":"<pre><code>Util \u2190 Encrypt \u2190 Domain\n</code></pre> <p>\uaddc\uce59: 1. \ud558\uc704 \ubaa8\ub4c8\uc740 \uc0c1\uc704 \ubaa8\ub4c8\uc744 \uc54c\uc9c0 \ubabb\ud568 2. \uc21c\ud658 \uc758\uc874\uc131 \uae08\uc9c0 3. \uc778\ud130\ud398\uc774\uc2a4\ub97c \ud1b5\ud55c \ub290\uc2a8\ud55c \uacb0\ud569</p>"},{"location":"development/architecture/#gradle","title":"Gradle \uc758\uc874\uc131 \uc124\uc815","text":"<pre><code>// util-module/build.gradle\ndependencies {\n    // \uc678\ubd80 \uc758\uc874\uc131\ub9cc \uc788\uc74c\n    implementation 'org.springframework.boot:spring-boot-starter'\n}\n\n// encrypt-module/build.gradle\ndependencies {\n    implementation project(':util-module')  // util\uc5d0 \uc758\uc874\n    implementation 'org.bouncycastle:bcprov-jdk18on:1.77'\n}\n\n// domain-module/build.gradle\ndependencies {\n    implementation project(':util-module')     // util\uc5d0 \uc758\uc874\n    implementation project(':encrypt-module')  // encrypt\uc5d0 \uc758\uc874\n    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'\n}\n</code></pre>"},{"location":"development/architecture/#_7","title":"\ud83c\udfaf \uc124\uacc4 \uc6d0\uce59","text":""},{"location":"development/architecture/#1-srp","title":"1. \ub2e8\uc77c \ucc45\uc784 \uc6d0\uce59 (SRP)","text":"<p>\uac01 \ubaa8\ub4c8\uc740 \ud558\ub098\uc758 \uba85\ud655\ud55c \ucc45\uc784\uc744 \uac00\uc9d1\ub2c8\ub2e4.</p> <pre><code>// Good: \uac01 \ud074\ub798\uc2a4\ub294 \ud558\ub098\uc758 \ucc45\uc784\npublic class StringUtils {\n    public String toCamelCase(String str) { ... }\n    public boolean isEmpty(String str) { ... }\n}\n\npublic class DateTimeUtils {\n    public String getCurrentDateTime() { ... }\n    public String formatDateTime(...) { ... }\n}\n</code></pre>"},{"location":"development/architecture/#2-ocp","title":"2. \uac1c\ubc29-\ud3d0\uc1c4 \uc6d0\uce59 (OCP)","text":"<p>\ud655\uc7a5\uc5d0\ub294 \uc5f4\ub824\uc788\uace0 \uc218\uc815\uc5d0\ub294 \ub2eb\ud600\uc788\uc2b5\ub2c8\ub2e4.</p> <pre><code>// \uc778\ud130\ud398\uc774\uc2a4\ub85c \ucd94\uc0c1\ud654\npublic interface EncryptionService {\n    String encrypt(String plainText, String key);\n    String decrypt(String encryptedText, String key);\n}\n\n// \uad6c\ud604\uccb4\ub294 \ud655\uc7a5 \uac00\ub2a5\npublic class AesEncryptionService implements EncryptionService {\n    // AES \uad6c\ud604\n}\n\npublic class RsaEncryptionService implements EncryptionService {\n    // RSA \uad6c\ud604 (\ud5a5\ud6c4 \ucd94\uac00 \uac00\ub2a5)\n}\n</code></pre>"},{"location":"development/architecture/#3-dip","title":"3. \uc758\uc874\uc131 \uc5ed\uc804 \uc6d0\uce59 (DIP)","text":"<p>\uace0\uc218\uc900 \ubaa8\ub4c8\uc740 \uc800\uc218\uc900 \ubaa8\ub4c8\uc5d0 \uc758\uc874\ud558\uc9c0 \uc54a\uace0, \ucd94\uc0c1\ud654\uc5d0 \uc758\uc874\ud569\ub2c8\ub2e4.</p> <pre><code>// Domain Module\uc758 Service\ub294 Repository \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \uc758\uc874\npublic class UserService {\n    private final UserRepository userRepository;  // \uc778\ud130\ud398\uc774\uc2a4\n\n    public UserService(UserRepository userRepository) {\n        this.userRepository = userRepository;\n    }\n}\n</code></pre>"},{"location":"development/architecture/#spring-boot","title":"\ud83d\udd0c Spring Boot \ud1b5\ud569","text":""},{"location":"development/architecture/#component-scan","title":"Component Scan \uc124\uc815","text":"<pre><code>@SpringBootApplication(scanBasePackages = {\n    \"com.example.util\",\n    \"com.example.encrypt\",\n    \"com.example.domain\"\n})\npublic class Application {\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n}\n</code></pre>"},{"location":"development/architecture/#auto-configuration","title":"Auto-Configuration","text":"<p>\uac01 \ubaa8\ub4c8\uc740 Spring Boot\uc758 \uc790\ub3d9 \uad6c\uc131\uc744 \ud65c\uc6a9\ud569\ub2c8\ub2e4.</p> <pre><code>// \uac01 \ubaa8\ub4c8\uc758 \ucef4\ud3ec\ub10c\ud2b8\ub294 @Component, @Service \ub4f1\uc73c\ub85c \uc790\ub3d9 \ub4f1\ub85d\n@Component\npublic class StringUtils { ... }\n\n@Service\npublic class UserService { ... }\n\n@Repository\npublic interface UserRepository extends JpaRepository&lt;User, Long&gt; { ... }\n</code></pre>"},{"location":"development/architecture/#_8","title":"\ud83d\udcca \ub370\uc774\ud130 \ud750\ub984","text":""},{"location":"development/architecture/#_9","title":"\uc0ac\uc6a9\uc790 \ub4f1\ub85d \ud50c\ub85c\uc6b0","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502Controller\u2502      \u2502 Service  \u2502      \u2502 Hash     \u2502      \u2502Repository\u2502\n\u2502         \u2502      \u2502          \u2502      \u2502 Service  \u2502      \u2502          \u2502\n\u2514\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2518\n     \u2502                \u2502                  \u2502                  \u2502\n     \u2502 register(user) \u2502                  \u2502                  \u2502\n     \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502                  \u2502                  \u2502\n     \u2502                \u2502 sha256(password) \u2502                  \u2502\n     \u2502                \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502                  \u2502\n     \u2502                \u2502 hashedPassword   \u2502                  \u2502\n     \u2502                \u2502\u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524                  \u2502\n     \u2502                \u2502                  \u2502                  \u2502\n     \u2502                \u2502 save(user)       \u2502                  \u2502\n     \u2502                \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502\n     \u2502                \u2502                  \u2502   savedUser      \u2502\n     \u2502                \u2502\u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n     \u2502 savedUser      \u2502                  \u2502                  \u2502\n     \u2502\u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524                  \u2502                  \u2502\n     \u2502                \u2502                  \u2502                  \u2502\n</code></pre>"},{"location":"development/architecture/#_10","title":"\ud83e\uddea \ud14c\uc2a4\ud2b8 \uc804\ub7b5","text":""},{"location":"development/architecture/#_11","title":"\ub2e8\uc704 \ud14c\uc2a4\ud2b8","text":"<p>\uac01 \ubaa8\ub4c8\uc740 \ub3c5\ub9bd\uc801\uc73c\ub85c \ud14c\uc2a4\ud2b8 \uac00\ub2a5\ud569\ub2c8\ub2e4.</p> <pre><code>// util-module \ud14c\uc2a4\ud2b8\n@Test\nvoid testToCamelCase() {\n    StringUtils utils = new StringUtils();\n    assertEquals(\"helloWorld\", utils.toCamelCase(\"hello_world\"));\n}\n\n// encrypt-module \ud14c\uc2a4\ud2b8\n@Test\nvoid testEncryptDecrypt() {\n    AesEncryptionService aes = new AesEncryptionService();\n    String key = aes.generateSecretKey();\n    String encrypted = aes.encrypt(\"test\", key);\n    String decrypted = aes.decrypt(encrypted, key);\n    assertEquals(\"test\", decrypted);\n}\n</code></pre>"},{"location":"development/architecture/#_12","title":"\ud1b5\ud569 \ud14c\uc2a4\ud2b8","text":"<pre><code>@SpringBootTest\n@AutoConfigureTestDatabase\nclass UserServiceIntegrationTest {\n    @Autowired\n    private UserService userService;\n\n    @Test\n    void testRegisterUser() {\n        User user = new User(\"test\", \"test@example.com\", \"password\");\n        User registered = userService.registerUser(user);\n        assertNotNull(registered.getId());\n    }\n}\n</code></pre>"},{"location":"development/architecture/#_13","title":"\ud83d\ude80 \ud655\uc7a5\uc131 \uace0\ub824\uc0ac\ud56d","text":""},{"location":"development/architecture/#1","title":"1. \uc0c8 \ubaa8\ub4c8 \ucd94\uac00","text":"<p>\uc0c8\ub85c\uc6b4 \uae30\ub2a5\uc774 \ud544\uc694\ud55c \uacbd\uc6b0 \ub3c5\ub9bd\uc801\uc778 \ubaa8\ub4c8\ub85c \ucd94\uac00:</p> <pre><code>// settings.gradle\ninclude 'util-module'\ninclude 'encrypt-module'\ninclude 'domain-module'\ninclude 'notification-module'  // \uc0c8 \ubaa8\ub4c8\n</code></pre>"},{"location":"development/architecture/#2","title":"2. \ubaa8\ub4c8 \ubd84\ub9ac","text":"<p>\ubaa8\ub4c8\uc774 \ucee4\uc9c0\uba74 \ub354 \uc791\uc740 \ubaa8\ub4c8\ub85c \ubd84\ub9ac:</p> <pre><code>domain-module/\n  \u251c\u2500\u2500 user-domain/\n  \u251c\u2500\u2500 order-domain/\n  \u2514\u2500\u2500 product-domain/\n</code></pre>"},{"location":"development/architecture/#3-api","title":"3. API \ubaa8\ub4c8 \ucd94\uac00","text":"<p>REST API\ub97c \uc704\ud55c \ubcc4\ub3c4 \ubaa8\ub4c8:</p> <pre><code>api-module/\n  \u251c\u2500\u2500 controllers/\n  \u251c\u2500\u2500 dto/\n  \u2514\u2500\u2500 config/\n</code></pre>"},{"location":"development/architecture/#_14","title":"\ud83d\udcda \ucc38\uace0 \uc790\ub8cc","text":"<ul> <li>Spring Boot Multi-Module Projects</li> <li>Clean Architecture</li> <li>Domain-Driven Design</li> </ul>"},{"location":"development/architecture/#_15","title":"\ub2e4\uc74c \ub2e8\uacc4","text":"<ul> <li>\ucf54\ub529 \ucee8\ubca4\uc158</li> <li>\ud14c\uc2a4\ud2b8 \uac00\uc774\ub4dc</li> </ul>"},{"location":"development/coding-conventions/","title":"\ucf54\ub529 \ucee8\ubca4\uc158","text":"<p>\ud504\ub85c\uc81d\ud2b8\uc758 \ucf54\ub4dc \uc77c\uad00\uc131\uc744 \uc704\ud55c \ucf54\ub529 \ucee8\ubca4\uc158\uc785\ub2c8\ub2e4.</p>"},{"location":"development/coding-conventions/#java","title":"\ud83d\udcdd Java \ucf54\ub529 \uc2a4\ud0c0\uc77c","text":""},{"location":"development/coding-conventions/#_2","title":"\ub124\uc774\ubc0d \uaddc\uce59","text":""},{"location":"development/coding-conventions/#_3","title":"\ud074\ub798\uc2a4\uc640 \uc778\ud130\ud398\uc774\uc2a4","text":"<pre><code>// PascalCase \uc0ac\uc6a9\npublic class UserService { }\npublic interface EncryptionService { }\n\n// \uc758\ubbf8 \uc788\ub294 \uc774\ub984 \uc0ac\uc6a9\npublic class AesEncryptionService { }  // Good\npublic class AES { }                    // Bad\n</code></pre>"},{"location":"development/coding-conventions/#_4","title":"\uba54\uc11c\ub4dc","text":"<pre><code>// camelCase \uc0ac\uc6a9\npublic String getUserName() { }\npublic void calculateTotal() { }\n\n// \ub3d9\uc0ac\ub85c \uc2dc\uc791\npublic void saveUser() { }      // Good\npublic void user() { }          // Bad\n\n// boolean\uc740 is/has/can\uc73c\ub85c \uc2dc\uc791\npublic boolean isValid() { }\npublic boolean hasPermission() { }\npublic boolean canAccess() { }\n</code></pre>"},{"location":"development/coding-conventions/#_5","title":"\ubcc0\uc218","text":"<pre><code>// camelCase \uc0ac\uc6a9\nString userName;\nint totalCount;\n\n// \uc0c1\uc218\ub294 UPPER_SNAKE_CASE\npublic static final String DEFAULT_DATE_FORMAT = \"yyyy-MM-dd\";\npublic static final int MAX_RETRY_COUNT = 3;\n</code></pre>"},{"location":"development/coding-conventions/#_6","title":"\ud328\ud0a4\uc9c0","text":"<pre><code>// \uc18c\ubb38\uc790, \uc810\uc73c\ub85c \uad6c\ubd84\ncom.example.util\ncom.example.encrypt\ncom.example.domain.entity\n</code></pre>"},{"location":"development/coding-conventions/#_7","title":"\ucf54\ub4dc \ud3ec\ub9f7\ud305","text":""},{"location":"development/coding-conventions/#_8","title":"\ub4e4\uc5ec\uc4f0\uae30","text":"<pre><code>// 4\uce78 \uacf5\ubc31 \uc0ac\uc6a9\npublic class Example {\n    public void method() {\n        if (condition) {\n            doSomething();\n        }\n    }\n}\n</code></pre>"},{"location":"development/coding-conventions/#_9","title":"\uc911\uad04\ud638","text":"<pre><code>// K&amp;R \uc2a4\ud0c0\uc77c (same line)\npublic void method() {\n    if (condition) {\n        doSomething();\n    } else {\n        doOtherThing();\n    }\n}\n\n// \ud55c \uc904\uc9dc\ub9ac\ub3c4 \uc911\uad04\ud638 \uc0ac\uc6a9\nif (condition) {\n    return;  // Good\n}\n\nif (condition) return;  // Avoid\n</code></pre>"},{"location":"development/coding-conventions/#_10","title":"\uc904 \uae38\uc774","text":"<pre><code>// \ucd5c\ub300 120\uc790 \uad8c\uc7a5\n// \uae38\uba74 \uc801\uc808\ud788 \uc904\ubc14\uafc8\nString result = someObject.method(param1, param2, param3)\n    .anotherMethod(param4)\n    .finalMethod();\n</code></pre>"},{"location":"development/coding-conventions/#_11","title":"\uacf5\ubc31","text":"<pre><code>// \uc5f0\uc0b0\uc790 \uc8fc\uc704\uc5d0 \uacf5\ubc31\nint sum = a + b;  // Good\nint sum=a+b;      // Bad\n\n// \uc27c\ud45c \ub4a4\uc5d0 \uacf5\ubc31\nmethod(a, b, c);  // Good\nmethod(a,b,c);    // Bad\n\n// \uba54\uc11c\ub4dc \uc120\uc5b8 \uc2dc \uad04\ud638\uc640 \uacf5\ubc31\npublic void method(int a, int b) {  // Good\npublic void method (int a, int b){  // Bad\n</code></pre>"},{"location":"development/coding-conventions/#javadoc","title":"\ud83d\udcda Javadoc \uc791\uc131 \uaddc\uce59","text":""},{"location":"development/coding-conventions/#_12","title":"\ud074\ub798\uc2a4 \ubb38\uc11c\ud654","text":"<pre><code>/**\n * \uc0ac\uc6a9\uc790 \uad00\ub828 \ube44\uc988\ub2c8\uc2a4 \ub85c\uc9c1\uc744 \ucc98\ub9ac\ud558\ub294 \uc11c\ube44\uc2a4\n * \n * &lt;p&gt;\uc774 \ud074\ub798\uc2a4\ub294 \uc0ac\uc6a9\uc790 \ub4f1\ub85d, \uc870\ud68c, \uc218\uc815, \uc0ad\uc81c \ub4f1\uc758 \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.&lt;/p&gt;\n * \n * @author Spring Multi Module Team\n * @version 1.0.0\n * @since 1.0.0\n * @see User\n * @see UserRepository\n */\n@Service\npublic class UserService {\n    // ...\n}\n</code></pre>"},{"location":"development/coding-conventions/#_13","title":"\uba54\uc11c\ub4dc \ubb38\uc11c\ud654","text":"<pre><code>/**\n * \uc0c8\ub85c\uc6b4 \uc0ac\uc6a9\uc790\ub97c \ub4f1\ub85d\ud569\ub2c8\ub2e4.\n * \n * &lt;p&gt;\ube44\ubc00\ubc88\ud638\ub294 SHA-256 \ud574\uc2dc\ub85c \uc790\ub3d9 \uc554\ud638\ud654\ub429\ub2c8\ub2e4.&lt;/p&gt;\n * \n * &lt;p&gt;&lt;strong&gt;\uc0ac\uc6a9 \uc608\uc81c:&lt;/strong&gt;&lt;/p&gt;\n * &lt;pre&gt;{@code\n * User user = new User(\"john\", \"john@example.com\", \"password\");\n * User registered = userService.registerUser(user);\n * }&lt;/pre&gt;\n * \n * @param user \ub4f1\ub85d\ud560 \uc0ac\uc6a9\uc790 \uc815\ubcf4\n * @return \ub4f1\ub85d\ub41c \uc0ac\uc6a9\uc790 \uac1d\uccb4 (ID \ud3ec\ud568)\n * @throws IllegalArgumentException \uc0ac\uc6a9\uc790 \uc774\ub984\uc774\ub098 \uc774\uba54\uc77c\uc774 \uc774\ubbf8 \uc874\uc7ac\ud558\ub294 \uacbd\uc6b0\n * @see #findById(Long)\n * @see HashService#sha256(String)\n */\n@Transactional\npublic User registerUser(User user) {\n    // ...\n}\n</code></pre>"},{"location":"development/coding-conventions/#_14","title":"\ud544\ub4dc \ubb38\uc11c\ud654","text":"<pre><code>/**\n * \uc0ac\uc6a9\uc790 \uace0\uc720 \uc2dd\ubcc4\uc790\n */\n@Id\n@GeneratedValue(strategy = GenerationType.IDENTITY)\nprivate Long id;\n\n/**\n * \uae30\ubcf8 \ub0a0\uc9dc \ud3ec\ub9f7 \ud328\ud134\n * \n * &lt;p&gt;\ud615\uc2dd: yyyy-MM-dd&lt;/p&gt;\n */\npublic static final String DEFAULT_DATE_FORMAT = \"yyyy-MM-dd\";\n</code></pre>"},{"location":"development/coding-conventions/#javadoc_1","title":"Javadoc \ud0dc\uadf8 \uc0ac\uc6a9","text":"\ud0dc\uadf8 \uc6a9\ub3c4 \uc608\uc81c <code>@param</code> \ub9e4\uac1c\ubcc0\uc218 \uc124\uba85 <code>@param username \uc0ac\uc6a9\uc790 \uc774\ub984</code> <code>@return</code> \ubc18\ud658\uac12 \uc124\uba85 <code>@return \uc0ac\uc6a9\uc790 \uac1d\uccb4</code> <code>@throws</code> \uc608\uc678 \uc124\uba85 <code>@throws IllegalArgumentException ...</code> <code>@see</code> \ucc38\uc870 \ub9c1\ud06c <code>@see UserRepository</code> <code>@since</code> \ub3c4\uc785 \ubc84\uc804 <code>@since 1.0.0</code> <code>@deprecated</code> \uc0ac\uc6a9 \uc911\ub2e8 <code>@deprecated Use {@link #newMethod()} instead</code> <code>@author</code> \uc791\uc131\uc790 <code>@author Team Name</code> <code>@version</code> \ubc84\uc804 <code>@version 1.0.0</code>"},{"location":"development/coding-conventions/#_15","title":"\ud83c\udfd7\ufe0f \ud074\ub798\uc2a4 \uad6c\uc870 \uc21c\uc11c","text":"<pre><code>public class Example {\n    // 1. \uc0c1\uc218\n    public static final String CONSTANT = \"value\";\n\n    // 2. \uc815\uc801 \ubcc0\uc218\n    private static int staticField;\n\n    // 3. \uc778\uc2a4\ud134\uc2a4 \ubcc0\uc218\n    private String instanceField;\n\n    // 4. \uc0dd\uc131\uc790\n    public Example() { }\n\n    public Example(String field) {\n        this.instanceField = field;\n    }\n\n    // 5. \uc815\uc801 \uba54\uc11c\ub4dc\n    public static void staticMethod() { }\n\n    // 6. public \uba54\uc11c\ub4dc\n    public void publicMethod() { }\n\n    // 7. protected \uba54\uc11c\ub4dc\n    protected void protectedMethod() { }\n\n    // 8. private \uba54\uc11c\ub4dc\n    private void privateMethod() { }\n\n    // 9. getter/setter\n    public String getInstanceField() {\n        return instanceField;\n    }\n\n    public void setInstanceField(String instanceField) {\n        this.instanceField = instanceField;\n    }\n}\n</code></pre>"},{"location":"development/coding-conventions/#_16","title":"\ud83c\udfaf \ubaa8\ubc94 \uc0ac\ub840","text":""},{"location":"development/coding-conventions/#_17","title":"\uc608\uc678 \ucc98\ub9ac","text":"<pre><code>// Good: \uad6c\uccb4\uc801\uc778 \uc608\uc678 \ucc98\ub9ac\npublic User findUser(Long id) {\n    return userRepository.findById(id)\n        .orElseThrow(() -&gt; new UserNotFoundException(\"User not found: \" + id));\n}\n\n// Bad: \uc77c\ubc18\uc801\uc778 \uc608\uc678 \uc0ac\uc6a9\npublic User findUser(Long id) throws Exception {\n    return userRepository.findById(id)\n        .orElseThrow(() -&gt; new Exception(\"Error\"));\n}\n</code></pre>"},{"location":"development/coding-conventions/#null","title":"Null \ucc98\ub9ac","text":"<pre><code>// Good: Optional \uc0ac\uc6a9\npublic Optional&lt;User&gt; findUser(Long id) {\n    return userRepository.findById(id);\n}\n\n// Good: null \uac80\uc99d\npublic void processUser(User user) {\n    if (user == null) {\n        throw new IllegalArgumentException(\"User cannot be null\");\n    }\n    // process...\n}\n</code></pre>"},{"location":"development/coding-conventions/#_18","title":"\ubd88\ubcc0\uc131","text":"<pre><code>// Good: final \ud0a4\uc6cc\ub4dc \uc0ac\uc6a9\npublic class UserService {\n    private final UserRepository userRepository;\n    private final HashService hashService;\n\n    public UserService(UserRepository userRepository, \n                      HashService hashService) {\n        this.userRepository = userRepository;\n        this.hashService = hashService;\n    }\n}\n</code></pre>"},{"location":"development/coding-conventions/#_19","title":"\ub9ac\uc18c\uc2a4 \uad00\ub9ac","text":"<pre><code>// Good: try-with-resources \uc0ac\uc6a9\ntry (InputStream input = new FileInputStream(\"file.txt\");\n     BufferedReader reader = new BufferedReader(new InputStreamReader(input))) {\n    String line = reader.readLine();\n    // process...\n}\n\n// Bad: \uc218\ub3d9 close\nInputStream input = new FileInputStream(\"file.txt\");\ntry {\n    // process...\n} finally {\n    input.close();\n}\n</code></pre>"},{"location":"development/coding-conventions/#_20","title":"\ud83e\uddea \ud14c\uc2a4\ud2b8 \ucf54\ub4dc \uaddc\uce59","text":""},{"location":"development/coding-conventions/#_21","title":"\ud14c\uc2a4\ud2b8 \uba54\uc11c\ub4dc \ub124\uc774\ubc0d","text":"<pre><code>// \ud328\ud134: should_ExpectedBehavior_When_StateUnderTest\n@Test\nvoid should_ReturnTrue_When_StringIsEmpty() {\n    // given\n    String input = \"\";\n    StringUtils utils = new StringUtils();\n\n    // when\n    boolean result = utils.isEmpty(input);\n\n    // then\n    assertTrue(result);\n}\n\n// \ub610\ub294: methodName_StateUnderTest_ExpectedBehavior\n@Test\nvoid isEmpty_EmptyString_ReturnsTrue() {\n    // ...\n}\n</code></pre>"},{"location":"development/coding-conventions/#given-when-then","title":"Given-When-Then \ud328\ud134","text":"<pre><code>@Test\nvoid testUserRegistration() {\n    // given (\uc900\ube44)\n    User user = new User(\"john\", \"john@example.com\", \"password\");\n\n    // when (\uc2e4\ud589)\n    User registered = userService.registerUser(user);\n\n    // then (\uac80\uc99d)\n    assertNotNull(registered.getId());\n    assertEquals(\"john\", registered.getUsername());\n}\n</code></pre>"},{"location":"development/coding-conventions/#_22","title":"\ud83d\udccb \uccb4\ud06c\ub9ac\uc2a4\ud2b8","text":"<p>\ucf54\ub4dc \ucee4\ubc0b \uc804 \ud655\uc778\uc0ac\ud56d:</p> <ul> <li>[ ] \ub124\uc774\ubc0d \uaddc\uce59\uc744 \ub530\ub790\ub294\uac00?</li> <li>[ ] Javadoc\uc774 \uc791\uc131\ub418\uc5c8\ub294\uac00?</li> <li>[ ] \uc608\uc678 \ucc98\ub9ac\uac00 \uc801\uc808\ud55c\uac00?</li> <li>[ ] \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\uac00 \uc791\uc131\ub418\uc5c8\ub294\uac00?</li> <li>[ ] \ubd88\ud544\uc694\ud55c \uc8fc\uc11d\uc774 \uc5c6\ub294\uac00?</li> <li>[ ] \ucf54\ub4dc \ud3ec\ub9f7\ud305\uc774 \uc77c\uad00\uc801\uc778\uac00?</li> <li>[ ] \ub9e4\uc9c1 \ub118\ubc84\ub97c \uc0c1\uc218\ub85c \uc815\uc758\ud588\ub294\uac00?</li> </ul>"},{"location":"development/coding-conventions/#_23","title":"\ud83d\udd27 \ub3c4\uad6c \uc124\uc815","text":""},{"location":"development/coding-conventions/#intellij-idea","title":"IntelliJ IDEA","text":"<pre><code>&lt;!-- Settings &gt; Editor &gt; Code Style &gt; Java --&gt;\n&lt;!-- Google Java Style Guide \ub610\ub294 \ud504\ub85c\uc81d\ud2b8 \uc2a4\ud0c0\uc77c \uc801\uc6a9 --&gt;\n</code></pre>"},{"location":"development/coding-conventions/#checkstyle","title":"Checkstyle","text":"<pre><code>&lt;!-- build.gradle --&gt;\nplugins {\n    id 'checkstyle'\n}\n\ncheckstyle {\n    toolVersion = '10.12.4'\n    configFile = file(\"${rootDir}/config/checkstyle/checkstyle.xml\")\n}\n</code></pre>"},{"location":"development/coding-conventions/#sonarqube","title":"SonarQube","text":"<pre><code>plugins {\n    id 'org.sonarqube' version '4.4.1.3373'\n}\n\nsonarqube {\n    properties {\n        property \"sonar.projectKey\", \"spring-multi-module\"\n        property \"sonar.java.source\", \"21\"\n    }\n}\n</code></pre>"},{"location":"development/coding-conventions/#_24","title":"\ud83d\udcda \ucc38\uace0 \uc790\ub8cc","text":"<ul> <li>Google Java Style Guide</li> <li>Oracle Code Conventions</li> <li>Effective Java</li> </ul>"},{"location":"development/testing/","title":"\ud14c\uc2a4\ud2b8 \uac00\uc774\ub4dc","text":"<p>\ud504\ub85c\uc81d\ud2b8\uc758 \ud14c\uc2a4\ud2b8 \uc804\ub7b5\uacfc \uc791\uc131 \ubc29\ubc95\uc744 \uc124\uba85\ud569\ub2c8\ub2e4.</p>"},{"location":"development/testing/#_2","title":"\ud83c\udfaf \ud14c\uc2a4\ud2b8 \uc804\ub7b5","text":""},{"location":"development/testing/#_3","title":"\ud14c\uc2a4\ud2b8 \ud53c\ub77c\ubbf8\ub4dc","text":"<pre><code>        /\\\n       /  \\\n      / E2E\\         (\uc18c\uc218)\n     /------\\\n    /  \ud1b5\ud569   \\      (\uc911\uac04)\n   /----------\\\n  /  \ub2e8\uc704 \ud14c\uc2a4\ud2b8 \\   (\ub2e4\uc218)\n /--------------\\\n</code></pre> <ul> <li>\ub2e8\uc704 \ud14c\uc2a4\ud2b8 (70%): \uac1c\ubcc4 \uba54\uc11c\ub4dc/\ud074\ub798\uc2a4 \ud14c\uc2a4\ud2b8</li> <li>\ud1b5\ud569 \ud14c\uc2a4\ud2b8 (20%): \uc5ec\ub7ec \ucef4\ud3ec\ub10c\ud2b8 \uac04 \uc0c1\ud638\uc791\uc6a9 \ud14c\uc2a4\ud2b8</li> <li>E2E \ud14c\uc2a4\ud2b8 (10%): \uc804\uccb4 \uc2dc\uc2a4\ud15c \ud14c\uc2a4\ud2b8</li> </ul>"},{"location":"development/testing/#_4","title":"\ud83e\uddea \ub2e8\uc704 \ud14c\uc2a4\ud2b8","text":""},{"location":"development/testing/#util-module","title":"Util Module \ud14c\uc2a4\ud2b8","text":"<pre><code>package com.example.util;\n\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.DisplayName;\nimport static org.junit.jupiter.api.Assertions.*;\n\n@DisplayName(\"StringUtils \ud14c\uc2a4\ud2b8\")\nclass StringUtilsTest {\n\n    private final StringUtils stringUtils = new StringUtils();\n\n    @Test\n    @DisplayName(\"\ube48 \ubb38\uc790\uc5f4 \ud655\uc778\")\n    void isEmpty_EmptyString_ReturnsTrue() {\n        // given\n        String input = \"\";\n\n        // when\n        boolean result = stringUtils.isEmpty(input);\n\n        // then\n        assertTrue(result);\n    }\n\n    @Test\n    @DisplayName(\"null \ubb38\uc790\uc5f4 \ud655\uc778\")\n    void isEmpty_NullString_ReturnsTrue() {\n        // given\n        String input = null;\n\n        // when\n        boolean result = stringUtils.isEmpty(input);\n\n        // then\n        assertTrue(result);\n    }\n\n    @Test\n    @DisplayName(\"\uce74\uba5c\ucf00\uc774\uc2a4 \ubcc0\ud658\")\n    void toCamelCase_UnderscoreString_ReturnsCamelCase() {\n        // given\n        String input = \"hello_world\";\n\n        // when\n        String result = stringUtils.toCamelCase(input);\n\n        // then\n        assertEquals(\"helloWorld\", result);\n    }\n\n    @Test\n    @DisplayName(\"null \uc785\ub825 \uc2dc \uc608\uc678 \ubc1c\uc0dd\")\n    void toCamelCase_NullInput_ThrowsException() {\n        // given\n        String input = null;\n\n        // when &amp; then\n        assertThrows(IllegalArgumentException.class, () -&gt; {\n            stringUtils.toCamelCase(input);\n        });\n    }\n}\n</code></pre>"},{"location":"development/testing/#encrypt-module","title":"Encrypt Module \ud14c\uc2a4\ud2b8","text":"<pre><code>package com.example.encrypt;\n\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.DisplayName;\nimport static org.junit.jupiter.api.Assertions.*;\n\n@DisplayName(\"AesEncryptionService \ud14c\uc2a4\ud2b8\")\nclass AesEncryptionServiceTest {\n\n    private final AesEncryptionService aesService = new AesEncryptionService();\n\n    @Test\n    @DisplayName(\"\uc554\ud638\ud654 \ubc0f \ubcf5\ud638\ud654\")\n    void encryptDecrypt_PlainText_ReturnsSameText() {\n        // given\n        String plainText = \"Hello World\";\n        String secretKey = aesService.generateSecretKey();\n\n        // when\n        String encrypted = aesService.encrypt(plainText, secretKey);\n        String decrypted = aesService.decrypt(encrypted, secretKey);\n\n        // then\n        assertNotEquals(plainText, encrypted);\n        assertEquals(plainText, decrypted);\n    }\n\n    @Test\n    @DisplayName(\"\ube44\ubc00\ud0a4 \uc0dd\uc131\")\n    void generateSecretKey_ReturnsValidKey() {\n        // when\n        String key1 = aesService.generateSecretKey();\n        String key2 = aesService.generateSecretKey();\n\n        // then\n        assertNotNull(key1);\n        assertNotNull(key2);\n        assertNotEquals(key1, key2);  // \ub9e4\ubc88 \ub2e4\ub978 \ud0a4 \uc0dd\uc131\n    }\n}\n</code></pre>"},{"location":"development/testing/#_5","title":"\ud14c\uc2a4\ud2b8 \uc2e4\ud589","text":"<pre><code># \uc804\uccb4 \ud14c\uc2a4\ud2b8\n./gradlew test\n\n# \ud2b9\uc815 \ubaa8\ub4c8 \ud14c\uc2a4\ud2b8\n./gradlew :util-module:test\n./gradlew :encrypt-module:test\n./gradlew :domain-module:test\n\n# \ud2b9\uc815 \ud14c\uc2a4\ud2b8 \ud074\ub798\uc2a4\ub9cc \uc2e4\ud589\n./gradlew test --tests StringUtilsTest\n\n# \ud2b9\uc815 \ud14c\uc2a4\ud2b8 \uba54\uc11c\ub4dc\ub9cc \uc2e4\ud589\n./gradlew test --tests StringUtilsTest.isEmpty_EmptyString_ReturnsTrue\n</code></pre>"},{"location":"development/testing/#_6","title":"\ud83d\udd17 \ud1b5\ud569 \ud14c\uc2a4\ud2b8","text":""},{"location":"development/testing/#domain-module","title":"Domain Module \ud1b5\ud569 \ud14c\uc2a4\ud2b8","text":"<pre><code>package com.example.domain.service;\n\nimport com.example.domain.entity.User;\nimport com.example.domain.repository.UserRepository;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.DisplayName;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.test.context.ActiveProfiles;\nimport org.springframework.transaction.annotation.Transactional;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\n@SpringBootTest\n@ActiveProfiles(\"test\")\n@Transactional\n@DisplayName(\"UserService \ud1b5\ud569 \ud14c\uc2a4\ud2b8\")\nclass UserServiceIntegrationTest {\n\n    @Autowired\n    private UserService userService;\n\n    @Autowired\n    private UserRepository userRepository;\n\n    @Test\n    @DisplayName(\"\uc0ac\uc6a9\uc790 \ub4f1\ub85d \ubc0f \uc870\ud68c\")\n    void registerAndFindUser() {\n        // given\n        User user = new User(\"john\", \"john@example.com\", \"password123\");\n\n        // when\n        User registered = userService.registerUser(user);\n        User found = userService.findById(registered.getId()).orElse(null);\n\n        // then\n        assertNotNull(found);\n        assertEquals(\"john\", found.getUsername());\n        assertEquals(\"john@example.com\", found.getEmail());\n        assertNotEquals(\"password123\", found.getPassword());  // \ud574\uc2dc\ub418\uc5b4\uc57c \ud568\n    }\n\n    @Test\n    @DisplayName(\"\uc911\ubcf5 \uc0ac\uc6a9\uc790 \uc774\ub984\uc73c\ub85c \ub4f1\ub85d \uc2dc \uc608\uc678 \ubc1c\uc0dd\")\n    void registerUser_DuplicateUsername_ThrowsException() {\n        // given\n        User user1 = new User(\"john\", \"john1@example.com\", \"password\");\n        User user2 = new User(\"john\", \"john2@example.com\", \"password\");\n\n        // when\n        userService.registerUser(user1);\n\n        // then\n        assertThrows(IllegalArgumentException.class, () -&gt; {\n            userService.registerUser(user2);\n        });\n    }\n\n    @Test\n    @DisplayName(\"\uc0ac\uc6a9\uc790 \uc778\uc99d\")\n    void authenticate_ValidCredentials_ReturnsTrue() {\n        // given\n        User user = new User(\"john\", \"john@example.com\", \"password123\");\n        userService.registerUser(user);\n\n        // when\n        boolean authenticated = userService.authenticate(\"john\", \"password123\");\n\n        // then\n        assertTrue(authenticated);\n    }\n\n    @Test\n    @DisplayName(\"\uc798\ubabb\ub41c \ube44\ubc00\ubc88\ud638\ub85c \uc778\uc99d \uc2dc \uc2e4\ud328\")\n    void authenticate_InvalidPassword_ReturnsFalse() {\n        // given\n        User user = new User(\"john\", \"john@example.com\", \"password123\");\n        userService.registerUser(user);\n\n        // when\n        boolean authenticated = userService.authenticate(\"john\", \"wrongpassword\");\n\n        // then\n        assertFalse(authenticated);\n    }\n}\n</code></pre>"},{"location":"development/testing/#repository","title":"Repository \ud14c\uc2a4\ud2b8","text":"<pre><code>package com.example.domain.repository;\n\nimport com.example.domain.entity.User;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.DisplayName;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;\nimport org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager;\n\nimport java.util.Optional;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\n@DataJpaTest\n@DisplayName(\"UserRepository \ud14c\uc2a4\ud2b8\")\nclass UserRepositoryTest {\n\n    @Autowired\n    private TestEntityManager entityManager;\n\n    @Autowired\n    private UserRepository userRepository;\n\n    @Test\n    @DisplayName(\"\uc0ac\uc6a9\uc790 \uc774\ub984\uc73c\ub85c \uc870\ud68c\")\n    void findByUsername_ExistingUser_ReturnsUser() {\n        // given\n        User user = new User(\"john\", \"john@example.com\", \"password\");\n        entityManager.persist(user);\n        entityManager.flush();\n\n        // when\n        Optional&lt;User&gt; found = userRepository.findByUsername(\"john\");\n\n        // then\n        assertTrue(found.isPresent());\n        assertEquals(\"john@example.com\", found.get().getEmail());\n    }\n\n    @Test\n    @DisplayName(\"\uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \uc0ac\uc6a9\uc790 \uc870\ud68c\")\n    void findByUsername_NonExistingUser_ReturnsEmpty() {\n        // when\n        Optional&lt;User&gt; found = userRepository.findByUsername(\"nonexistent\");\n\n        // then\n        assertFalse(found.isPresent());\n    }\n\n    @Test\n    @DisplayName(\"\uc0ac\uc6a9\uc790 \uc774\ub984 \uc874\uc7ac \uc5ec\ubd80 \ud655\uc778\")\n    void existsByUsername_ExistingUser_ReturnsTrue() {\n        // given\n        User user = new User(\"john\", \"john@example.com\", \"password\");\n        entityManager.persist(user);\n        entityManager.flush();\n\n        // when\n        boolean exists = userRepository.existsByUsername(\"john\");\n\n        // then\n        assertTrue(exists);\n    }\n}\n</code></pre>"},{"location":"development/testing/#_7","title":"\ud83d\uddc4\ufe0f \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc124\uc815","text":""},{"location":"development/testing/#application-testyml","title":"application-test.yml","text":"<pre><code>spring:\n  datasource:\n    url: jdbc:h2:mem:testdb\n    driver-class-name: org.h2.Driver\n    username: sa\n    password:\n  h2:\n    console:\n      enabled: false\n  jpa:\n    hibernate:\n      ddl-auto: create-drop\n    show-sql: true\n    properties:\n      hibernate:\n        format_sql: true\n\nlogging:\n  level:\n    org.hibernate.SQL: DEBUG\n    org.hibernate.type.descriptor.sql.BasicBinder: TRACE\n</code></pre>"},{"location":"development/testing/#_8","title":"\ud83d\udcca \ud14c\uc2a4\ud2b8 \ucee4\ubc84\ub9ac\uc9c0","text":""},{"location":"development/testing/#jacoco","title":"JaCoCo \uc124\uc815","text":"<pre><code>// build.gradle\nplugins {\n    id 'jacoco'\n}\n\njacoco {\n    toolVersion = \"0.8.11\"\n}\n\ntest {\n    finalizedBy jacocoTestReport\n}\n\njacocoTestReport {\n    dependsOn test\n\n    reports {\n        xml.required = true\n        html.required = true\n        csv.required = false\n    }\n\n    afterEvaluate {\n        classDirectories.setFrom(files(classDirectories.files.collect {\n            fileTree(dir: it, exclude: [\n                '**/entity/**',\n                '**/config/**'\n            ])\n        }))\n    }\n}\n\njacocoTestCoverageVerification {\n    violationRules {\n        rule {\n            limit {\n                minimum = 0.80  // 80% \ucee4\ubc84\ub9ac\uc9c0\n            }\n        }\n    }\n}\n\ncheck.dependsOn jacocoTestCoverageVerification\n</code></pre>"},{"location":"development/testing/#_9","title":"\ucee4\ubc84\ub9ac\uc9c0 \ub9ac\ud3ec\ud2b8 \uc0dd\uc131","text":"<pre><code># \ud14c\uc2a4\ud2b8 \uc2e4\ud589 \ubc0f \ucee4\ubc84\ub9ac\uc9c0 \ub9ac\ud3ec\ud2b8 \uc0dd\uc131\n./gradlew test jacocoTestReport\n\n# \ucee4\ubc84\ub9ac\uc9c0 \uac80\uc99d\n./gradlew jacocoTestCoverageVerification\n</code></pre> <p>\ub9ac\ud3ec\ud2b8 \uc704\uce58: <code>build/reports/jacoco/test/html/index.html</code></p>"},{"location":"development/testing/#mocking","title":"\ud83c\udfad Mocking","text":""},{"location":"development/testing/#mockito","title":"Mockito \uc0ac\uc6a9","text":"<pre><code>import org.mockito.Mock;\nimport org.mockito.InjectMocks;\nimport org.mockito.junit.jupiter.MockitoExtension;\nimport org.junit.jupiter.api.extension.ExtendWith;\n\nimport static org.mockito.Mockito.*;\n\n@ExtendWith(MockitoExtension.class)\nclass UserServiceMockTest {\n\n    @Mock\n    private UserRepository userRepository;\n\n    @Mock\n    private HashService hashService;\n\n    @InjectMocks\n    private UserService userService;\n\n    @Test\n    @DisplayName(\"\uc0ac\uc6a9\uc790 \uc870\ud68c - Mock \uc0ac\uc6a9\")\n    void findById_WithMock() {\n        // given\n        User user = new User(\"john\", \"john@example.com\", \"hashedPassword\");\n        user.setId(1L);\n        when(userRepository.findById(1L)).thenReturn(Optional.of(user));\n\n        // when\n        Optional&lt;User&gt; found = userService.findById(1L);\n\n        // then\n        assertTrue(found.isPresent());\n        assertEquals(\"john\", found.get().getUsername());\n        verify(userRepository, times(1)).findById(1L);\n    }\n}\n</code></pre>"},{"location":"development/testing/#_10","title":"\ud83d\ude80 \ud14c\uc2a4\ud2b8 \ubca0\uc2a4\ud2b8 \ud504\ub799\ud2f0\uc2a4","text":""},{"location":"development/testing/#1","title":"1. \ud14c\uc2a4\ud2b8\ub294 \ub3c5\ub9bd\uc801\uc774\uc5b4\uc57c \ud568","text":"<pre><code>// Good: \uac01 \ud14c\uc2a4\ud2b8\uac00 \ub3c5\ub9bd\uc801\n@Test\nvoid test1() {\n    User user = createTestUser();\n    // test...\n}\n\n@Test\nvoid test2() {\n    User user = createTestUser();\n    // test...\n}\n\n// Bad: \ud14c\uc2a4\ud2b8 \uac04 \uc0c1\ud0dc \uacf5\uc720\nprivate User sharedUser;\n\n@BeforeEach\nvoid setup() {\n    sharedUser = createTestUser();\n}\n</code></pre>"},{"location":"development/testing/#2","title":"2. \uba85\ud655\ud55c \ud14c\uc2a4\ud2b8 \uc774\ub984","text":"<pre><code>// Good\n@Test\nvoid registerUser_ValidInput_SavesUserSuccessfully() { }\n\n// Bad\n@Test\nvoid test1() { }\n</code></pre>"},{"location":"development/testing/#3-given-when-then","title":"3. Given-When-Then \ud328\ud134 \uc0ac\uc6a9","text":"<pre><code>@Test\nvoid testExample() {\n    // given (\uc900\ube44): \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \uc900\ube44\n    User user = new User(\"john\", \"john@example.com\", \"password\");\n\n    // when (\uc2e4\ud589): \ud14c\uc2a4\ud2b8 \ub300\uc0c1 \uba54\uc11c\ub4dc \uc2e4\ud589\n    User result = userService.registerUser(user);\n\n    // then (\uac80\uc99d): \uacb0\uacfc \uac80\uc99d\n    assertNotNull(result.getId());\n}\n</code></pre>"},{"location":"development/testing/#4","title":"4. \ud558\ub098\uc758 \uac1c\ub150\ub9cc \ud14c\uc2a4\ud2b8","text":"<pre><code>// Good: \ud558\ub098\uc758 \uae30\ub2a5\ub9cc \ud14c\uc2a4\ud2b8\n@Test\nvoid encrypt_ValidInput_ReturnsEncryptedString() {\n    String result = aesService.encrypt(\"test\", key);\n    assertNotNull(result);\n}\n\n@Test\nvoid decrypt_EncryptedInput_ReturnsOriginalString() {\n    String encrypted = aesService.encrypt(\"test\", key);\n    String decrypted = aesService.decrypt(encrypted, key);\n    assertEquals(\"test\", decrypted);\n}\n</code></pre>"},{"location":"development/testing/#_11","title":"\ud83d\udcdd \ud14c\uc2a4\ud2b8 \uccb4\ud06c\ub9ac\uc2a4\ud2b8","text":"<ul> <li>[ ] \ubaa8\ub4e0 public \uba54\uc11c\ub4dc\uc5d0 \ud14c\uc2a4\ud2b8 \uc791\uc131</li> <li>[ ] \uc608\uc678 \ucf00\uc774\uc2a4 \ud14c\uc2a4\ud2b8</li> <li>[ ] \uacbd\uacc4\uac12 \ud14c\uc2a4\ud2b8</li> <li>[ ] null \uccb4\ud06c \ud14c\uc2a4\ud2b8</li> <li>[ ] \ud14c\uc2a4\ud2b8 \ucee4\ubc84\ub9ac\uc9c0 80% \uc774\uc0c1</li> <li>[ ] \ud14c\uc2a4\ud2b8 \uc774\ub984\uc774 \uba85\ud655\ud568</li> <li>[ ] \uac01 \ud14c\uc2a4\ud2b8\uac00 \ub3c5\ub9bd\uc801\uc784</li> <li>[ ] Given-When-Then \ud328\ud134 \uc0ac\uc6a9</li> </ul>"},{"location":"development/testing/#_12","title":"\ud83d\udee0\ufe0f \uc720\uc6a9\ud55c \uba85\ub839\uc5b4","text":"<pre><code># \ud14c\uc2a4\ud2b8 \uc2e4\ud589\n./gradlew test\n\n# \ud2b9\uc815 \ubaa8\ub4c8\ub9cc\n./gradlew :util-module:test\n\n# \ucee4\ubc84\ub9ac\uc9c0 \ub9ac\ud3ec\ud2b8\n./gradlew jacocoTestReport\n\n# \uc9c0\uc18d\uc801 \ud14c\uc2a4\ud2b8 (\ud30c\uc77c \ubcc0\uacbd \uac10\uc9c0)\n./gradlew test --continuous\n\n# \ubcd1\ub82c \ud14c\uc2a4\ud2b8 \uc2e4\ud589\n./gradlew test --parallel\n\n# \uc2e4\ud328\ud55c \ud14c\uc2a4\ud2b8\ub9cc \uc7ac\uc2e4\ud589\n./gradlew test --rerun-tasks\n</code></pre>"},{"location":"development/testing/#_13","title":"\ud83d\udcda \ucc38\uace0 \uc790\ub8cc","text":"<ul> <li>JUnit 5 User Guide</li> <li>Mockito Documentation</li> <li>Spring Boot Testing</li> </ul>"},{"location":"getting-started/installation/","title":"\uc124\uce58 \uac00\uc774\ub4dc","text":"<p>\ud504\ub85c\uc81d\ud2b8\ub97c \uc124\uce58\ud558\uace0 \uc2e4\ud589\ud558\ub294 \ubc29\ubc95\uc744 \uc548\ub0b4\ud569\ub2c8\ub2e4.</p>"},{"location":"getting-started/installation/#_2","title":"\ud83d\udccb \uc0ac\uc804 \uc694\uad6c\uc0ac\ud56d","text":""},{"location":"getting-started/installation/#_3","title":"\ud544\uc218 \uc694\uad6c\uc0ac\ud56d","text":"<ul> <li>Java 21 \uc774\uc0c1: OpenJDK \ub610\ub294 Oracle JDK</li> <li>Gradle 8.5 \uc774\uc0c1: \ube4c\ub4dc \ub3c4\uad6c (Gradle Wrapper \ud3ec\ud568)</li> <li>Git: \uc18c\uc2a4 \ucf54\ub4dc \uad00\ub9ac</li> </ul>"},{"location":"getting-started/installation/#_4","title":"\uc120\ud0dd \uc0ac\ud56d","text":"<ul> <li>IDE: IntelliJ IDEA, Eclipse, VSCode</li> <li>MkDocs: \ubb38\uc11c \ub85c\uceec \ube4c\ub4dc \uc2dc \ud544\uc694</li> <li>Python 3.8+: MkDocs \uc2e4\ud589\uc744 \uc704\ud574 \ud544\uc694</li> </ul>"},{"location":"getting-started/installation/#java","title":"\ud83d\udd27 Java \uc124\uce58 \ud655\uc778","text":"<pre><code>java -version\n</code></pre> <p>\uc608\uc0c1 \ucd9c\ub825: <pre><code>openjdk version \"21.0.1\" 2023-10-17\nOpenJDK Runtime Environment (build 21.0.1+12-29)\n</code></pre></p> <p>Java 21\uc774 \uc124\uce58\ub418\uc5b4 \uc788\uc9c0 \uc54a\ub2e4\uba74:</p>"},{"location":"getting-started/installation/#macos-homebrew","title":"macOS (Homebrew)","text":"<pre><code>brew install openjdk@21\n</code></pre>"},{"location":"getting-started/installation/#ubuntudebian","title":"Ubuntu/Debian","text":"<pre><code>sudo apt update\nsudo apt install openjdk-21-jdk\n</code></pre>"},{"location":"getting-started/installation/#windows","title":"Windows","text":"<p>Oracle JDK \ub610\ub294 Adoptium\uc5d0\uc11c \ub2e4\uc6b4\ub85c\ub4dc</p>"},{"location":"getting-started/installation/#_5","title":"\ud83d\udce5 \ud504\ub85c\uc81d\ud2b8 \ud074\ub860","text":"<pre><code>git clone https://github.com/yourusername/spring-multi-module.git\ncd spring-multi-module\n</code></pre>"},{"location":"getting-started/installation/#_6","title":"\ud83c\udfd7\ufe0f \ud504\ub85c\uc81d\ud2b8 \ube4c\ub4dc","text":""},{"location":"getting-started/installation/#gradle-wrapper","title":"Gradle Wrapper \uc0ac\uc6a9 (\uad8c\uc7a5)","text":"<p>\ud504\ub85c\uc81d\ud2b8\uc5d0\ub294 Gradle Wrapper\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc5b4 \ubcc4\ub3c4\uc758 Gradle \uc124\uce58 \uc5c6\uc774 \ube4c\ub4dc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <pre><code># Linux/macOS\n./gradlew build\n\n# Windows\ngradlew.bat build\n</code></pre>"},{"location":"getting-started/installation/#_7","title":"\uc804\uccb4 \ube4c\ub4dc \ubc0f \ud14c\uc2a4\ud2b8","text":"<pre><code>./gradlew clean build test\n</code></pre>"},{"location":"getting-started/installation/#_8","title":"\ud2b9\uc815 \ubaa8\ub4c8\ub9cc \ube4c\ub4dc","text":"<pre><code># util-module\ub9cc \ube4c\ub4dc\n./gradlew :util-module:build\n\n# encrypt-module\ub9cc \ube4c\ub4dc\n./gradlew :encrypt-module:build\n\n# domain-module\ub9cc \ube4c\ub4dc\n./gradlew :domain-module:build\n</code></pre>"},{"location":"getting-started/installation/#javadoc","title":"\ud83d\udcda Javadoc \uc0dd\uc131","text":""},{"location":"getting-started/installation/#javadoc_1","title":"\ubaa8\ub4e0 \ubaa8\ub4c8\uc758 Javadoc \uc0dd\uc131","text":"<pre><code>./gradlew generateAllJavadocs\n</code></pre> <p>\uc0dd\uc131\ub41c Javadoc\uc740 <code>docs/javadoc/</code> \ub514\ub809\ud1a0\ub9ac\uc5d0 \uc800\uc7a5\ub429\ub2c8\ub2e4:</p> <pre><code>docs/javadoc/\n\u251c\u2500\u2500 util-module/\n\u251c\u2500\u2500 encrypt-module/\n\u251c\u2500\u2500 domain-module/\n\u2514\u2500\u2500 aggregated/\n</code></pre>"},{"location":"getting-started/installation/#javadoc_2","title":"\ud2b9\uc815 \ubaa8\ub4c8\uc758 Javadoc \uc0dd\uc131","text":"<pre><code>./gradlew :util-module:generateModuleJavadoc\n./gradlew :encrypt-module:generateModuleJavadoc\n./gradlew :domain-module:generateModuleJavadoc\n</code></pre>"},{"location":"getting-started/installation/#javadoc_3","title":"\ud1b5\ud569 Javadoc \uc0dd\uc131","text":"<pre><code>./gradlew generateAggregatedJavadoc\n</code></pre>"},{"location":"getting-started/installation/#mkdocs","title":"\ud83d\udcd6 MkDocs \uc124\uce58 \ubc0f \uc2e4\ud589","text":""},{"location":"getting-started/installation/#mkdocs_1","title":"MkDocs \uc124\uce58","text":"<pre><code># pip\ub97c \uc0ac\uc6a9\ud55c \uc124\uce58\npip install mkdocs mkdocs-material\n\n# \ub610\ub294 requirements.txt\uac00 \uc788\ub294 \uacbd\uc6b0\npip install -r requirements.txt\n</code></pre>"},{"location":"getting-started/installation/#_9","title":"\ub85c\uceec\uc5d0\uc11c \ubb38\uc11c \uc11c\ubc84 \uc2e4\ud589","text":"<pre><code>mkdocs serve\n</code></pre> <p>\ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c <code>http://127.0.0.1:8000</code> \uc811\uc18d</p>"},{"location":"getting-started/installation/#_10","title":"\ubb38\uc11c \ube4c\ub4dc","text":"<pre><code>mkdocs build\n</code></pre> <p>\ube4c\ub4dc\ub41c \ubb38\uc11c\ub294 <code>site/</code> \ub514\ub809\ud1a0\ub9ac\uc5d0 \uc0dd\uc131\ub429\ub2c8\ub2e4.</p>"},{"location":"getting-started/installation/#ide","title":"\ud83d\ude80 IDE \uc124\uc815","text":""},{"location":"getting-started/installation/#intellij-idea","title":"IntelliJ IDEA","text":"<ol> <li>IntelliJ IDEA \uc2e4\ud589</li> <li><code>File</code> &gt; <code>Open</code> &gt; \ud504\ub85c\uc81d\ud2b8 \ub8e8\ud2b8 \ub514\ub809\ud1a0\ub9ac \uc120\ud0dd</li> <li>Gradle \ud504\ub85c\uc81d\ud2b8\ub85c \uc790\ub3d9 \uc778\uc2dd\ub418\uc5b4 import\ub428</li> <li><code>File</code> &gt; <code>Project Structure</code> &gt; <code>Project SDK</code>\ub97c Java 21\ub85c \uc124\uc815</li> </ol>"},{"location":"getting-started/installation/#eclipse","title":"Eclipse","text":"<ol> <li>Eclipse \uc2e4\ud589</li> <li><code>File</code> &gt; <code>Import</code> &gt; <code>Gradle</code> &gt; <code>Existing Gradle Project</code></li> <li>\ud504\ub85c\uc81d\ud2b8 \ub8e8\ud2b8 \ub514\ub809\ud1a0\ub9ac \uc120\ud0dd</li> <li>Finish</li> </ol>"},{"location":"getting-started/installation/#vscode","title":"VSCode","text":"<ol> <li>VSCode \uc2e4\ud589</li> <li><code>Extension Pack for Java</code> \uc124\uce58</li> <li>\ud504\ub85c\uc81d\ud2b8 \ud3f4\ub354 \uc5f4\uae30</li> <li>Java 21 \uacbd\ub85c\ub97c <code>settings.json</code>\uc5d0 \uc124\uc815:</li> </ol> <pre><code>{\n    \"java.configuration.runtimes\": [\n        {\n            \"name\": \"JavaSE-21\",\n            \"path\": \"/path/to/jdk-21\",\n            \"default\": true\n        }\n    ]\n}\n</code></pre>"},{"location":"getting-started/installation/#_11","title":"\u2705 \uc124\uce58 \ud655\uc778","text":""},{"location":"getting-started/installation/#_12","title":"\ube4c\ub4dc \ud655\uc778","text":"<pre><code>./gradlew build\n</code></pre> <p>\uc131\uacf5 \uc2dc \ucd9c\ub825: <pre><code>BUILD SUCCESSFUL in 10s\n</code></pre></p>"},{"location":"getting-started/installation/#_13","title":"\ud14c\uc2a4\ud2b8 \uc2e4\ud589","text":"<pre><code>./gradlew test\n</code></pre>"},{"location":"getting-started/installation/#_14","title":"\ubaa8\ub4c8 \ud655\uc778","text":"<pre><code>./gradlew projects\n</code></pre> <p>\ucd9c\ub825 \uc608\uc2dc: <pre><code>Root project 'spring-multi-module'\n+--- Project ':util-module'\n+--- Project ':encrypt-module'\n\\--- Project ':domain-module'\n</code></pre></p>"},{"location":"getting-started/installation/#_15","title":"\ud83d\udc1b \ubb38\uc81c \ud574\uacb0","text":""},{"location":"getting-started/installation/#gradle-wrapper-linuxmacos","title":"Gradle Wrapper \uc2e4\ud589 \uad8c\ud55c \uc624\ub958 (Linux/macOS)","text":"<pre><code>chmod +x gradlew\n</code></pre>"},{"location":"getting-started/installation/#java_1","title":"Java \ubc84\uc804 \ubd88\uc77c\uce58","text":"<pre><code># \ud604\uc7ac Java \ubc84\uc804 \ud655\uc778\njava -version\n\n# JAVA_HOME \uc124\uc815 (Linux/macOS)\nexport JAVA_HOME=/path/to/jdk-21\nexport PATH=$JAVA_HOME/bin:$PATH\n\n# JAVA_HOME \uc124\uc815 (Windows)\nset JAVA_HOME=C:\\Path\\To\\jdk-21\nset PATH=%JAVA_HOME%\\bin;%PATH%\n</code></pre>"},{"location":"getting-started/installation/#_16","title":"\ube4c\ub4dc \uce90\uc2dc \ubb38\uc81c","text":"<pre><code>./gradlew clean build --no-build-cache\n</code></pre>"},{"location":"getting-started/installation/#_17","title":"\uc758\uc874\uc131 \ub2e4\uc6b4\ub85c\ub4dc \uc2e4\ud328","text":"<pre><code># \uc758\uc874\uc131 \ub2e4\uc2dc \ub2e4\uc6b4\ub85c\ub4dc\n./gradlew build --refresh-dependencies\n</code></pre>"},{"location":"getting-started/installation/#_18","title":"\ud83d\udcde \ub3c4\uc6c0\ub9d0","text":"<p>\ubb38\uc81c\uac00 \uc9c0\uc18d\ub418\uba74 \ub2e4\uc74c\uc744 \ud655\uc778\ud558\uc138\uc694:</p> <ul> <li>FAQ</li> <li>GitHub Issues</li> <li>Gradle \uacf5\uc2dd \ubb38\uc11c</li> </ul>"},{"location":"getting-started/installation/#_19","title":"\ub2e4\uc74c \ub2e8\uacc4","text":"<p>\uc124\uce58\uac00 \uc644\ub8cc\ub418\uc5c8\ub2e4\uba74 \ube60\ub978 \uc2dc\uc791 \uac00\uc774\ub4dc\ub97c \ud655\uc778\ud558\uc138\uc694.</p>"},{"location":"getting-started/introduction/","title":"\uc18c\uac1c","text":"<p>Spring Boot 3.x\uc640 Java 21\uc744 \uc0ac\uc6a9\ud55c \uba40\ud2f0\ubaa8\ub4c8 \ud504\ub85c\uc81d\ud2b8\uc785\ub2c8\ub2e4.</p>"},{"location":"getting-started/introduction/#_2","title":"\ud83c\udfaf \ud504\ub85c\uc81d\ud2b8 \ubaa9\uc801","text":"<p>\uc774 \ud504\ub85c\uc81d\ud2b8\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \ubaa9\uc801\uc744 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4:</p> <ul> <li>Spring Boot \uba40\ud2f0\ubaa8\ub4c8 \uc544\ud0a4\ud14d\ucc98\uc758 \ubca0\uc2a4\ud2b8 \ud504\ub799\ud2f0\uc2a4 \uc81c\uc2dc</li> <li>\ubaa8\ub4c8 \uac04 \uc758\uc874\uc131 \uad00\ub9ac \ubc29\ubc95 \uc2dc\uc5f0</li> <li>\uc7ac\uc0ac\uc6a9 \uac00\ub2a5\ud55c \ucef4\ud3ec\ub10c\ud2b8 \uc124\uacc4 \uc608\uc81c \uc81c\uacf5</li> <li>\ubb38\uc11c\ud654 \uc790\ub3d9\ud654 (MkDocs + Javadoc) \uad6c\ud604</li> </ul>"},{"location":"getting-started/introduction/#_3","title":"\ud83c\udfd7\ufe0f \uae30\uc220 \uc2a4\ud0dd","text":""},{"location":"getting-started/introduction/#backend","title":"Backend","text":"<ul> <li>Java: 21</li> <li>Spring Boot: 3.2.0+</li> <li>Gradle: 8.5+</li> <li>JPA/Hibernate: \ub370\uc774\ud130 \uc601\uc18d\uc131</li> <li>H2 Database: \uac1c\ubc1c \ubc0f \ud14c\uc2a4\ud2b8\uc6a9 \uc778\uba54\ubaa8\ub9ac \ub370\uc774\ud130\ubca0\uc774\uc2a4</li> </ul>"},{"location":"getting-started/introduction/#security-encryption","title":"Security &amp; Encryption","text":"<ul> <li>BouncyCastle: \uc554\ud638\ud654 \ub77c\uc774\ube0c\ub7ec\ub9ac</li> </ul>"},{"location":"getting-started/introduction/#documentation","title":"Documentation","text":"<ul> <li>MkDocs: \ubb38\uc11c \uc0dd\uc131</li> <li>Material Theme: MkDocs \ud14c\ub9c8</li> <li>Javadoc: API \ubb38\uc11c \uc0dd\uc131</li> </ul>"},{"location":"getting-started/introduction/#_4","title":"\ud83d\udce6 \ubaa8\ub4c8 \uac1c\uc694","text":""},{"location":"getting-started/introduction/#1-util-module","title":"1. Util Module","text":"<p>\uacf5\ud1b5 \uc720\ud2f8\ub9ac\ud2f0 \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ub294 \uae30\ubcf8 \ubaa8\ub4c8\uc785\ub2c8\ub2e4.</p> <p>\uc8fc\uc694 \uae30\ub2a5: - \ubb38\uc790\uc5f4 \ucc98\ub9ac \uc720\ud2f8\ub9ac\ud2f0 - \ub0a0\uc9dc/\uc2dc\uac04 \ucc98\ub9ac \uc720\ud2f8\ub9ac\ud2f0</p> <p>\uc758\uc874\uc131: \uc5c6\uc74c (\ub3c5\ub9bd \ubaa8\ub4c8)</p>"},{"location":"getting-started/introduction/#2-encrypt-module","title":"2. Encrypt Module","text":"<p>\uc554\ud638\ud654 \ubc0f \ubcf4\uc548 \uad00\ub828 \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ub294 \ubaa8\ub4c8\uc785\ub2c8\ub2e4.</p> <p>\uc8fc\uc694 \uae30\ub2a5: - AES \uc554\ud638\ud654/\ubcf5\ud638\ud654 - SHA-256, MD5 \ud574\uc2dc \uc0dd\uc131 - Base64 \uc778\ucf54\ub529/\ub514\ucf54\ub529</p> <p>\uc758\uc874\uc131: Util Module</p>"},{"location":"getting-started/introduction/#3-domain-module","title":"3. Domain Module","text":"<p>\ube44\uc988\ub2c8\uc2a4 \ub3c4\uba54\uc778 \ubaa8\ub378\uacfc \ub85c\uc9c1\uc744 \ub2f4\ub2f9\ud558\ub294 \ubaa8\ub4c8\uc785\ub2c8\ub2e4.</p> <p>\uc8fc\uc694 \uae30\ub2a5: - User \uc5d4\ud2f0\ud2f0 \ubc0f \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac - \uc0ac\uc6a9\uc790 \uad00\ub9ac \uc11c\ube44\uc2a4 - \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc5f0\ub3d9</p> <p>\uc758\uc874\uc131: Util Module, Encrypt Module</p>"},{"location":"getting-started/introduction/#_5","title":"\ud83d\udd04 \ubaa8\ub4c8 \uc758\uc874\uc131 \uadf8\ub798\ud504","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  Util Module    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \u2502\n         \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Encrypt Module  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \u2502\n         \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  Domain Module  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"getting-started/introduction/#_6","title":"\u2728 \uc8fc\uc694 \ud2b9\uc9d5","text":"<ol> <li>\ubaa8\ub4c8\ud654\ub41c \uad6c\uc870: \uae30\ub2a5\ubcc4\ub85c \ubd84\ub9ac\ub41c \ubaa8\ub4c8 \uad6c\uc870</li> <li>\uc758\uc874\uc131 \uc8fc\uc785: Spring\uc758 DI \ucee8\ud14c\uc774\ub108 \ud65c\uc6a9</li> <li>\uc790\ub3d9 \ubb38\uc11c\ud654: Gradle \ud0dc\uc2a4\ud06c\ub97c \ud1b5\ud55c Javadoc \uc790\ub3d9 \uc0dd\uc131</li> <li>\ud0c0\uc785 \uc548\uc815\uc131: Java 21\uc758 \ucd5c\uc2e0 \uae30\ub2a5 \ud65c\uc6a9</li> <li>\ud14c\uc2a4\ud2b8 \uc9c0\uc6d0: \uac01 \ubaa8\ub4c8\ubcc4 \ub3c5\ub9bd\uc801\uc778 \ud14c\uc2a4\ud2b8 \uac00\ub2a5</li> </ol>"},{"location":"getting-started/introduction/#_7","title":"\ud83c\udf93 \ud559\uc2b5 \ubaa9\ud45c","text":"<p>\uc774 \ud504\ub85c\uc81d\ud2b8\ub97c \ud1b5\ud574 \ub2e4\uc74c\uc744 \ud559\uc2b5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:</p> <ul> <li>Spring Boot \uba40\ud2f0\ubaa8\ub4c8 \ud504\ub85c\uc81d\ud2b8 \uad6c\uc131 \ubc29\ubc95</li> <li>Gradle\uc744 \uc774\uc6a9\ud55c \ubaa8\ub4c8 \uac04 \uc758\uc874\uc131 \uad00\ub9ac</li> <li>MkDocs\uc640 Javadoc\uc744 \uc774\uc6a9\ud55c \ubb38\uc11c\ud654 \uc790\ub3d9\ud654</li> <li>\ubaa8\ub4c8\ud654\ub41c \uc544\ud0a4\ud14d\ucc98 \uc124\uacc4 \uc6d0\uce59</li> <li>Spring Boot 3.x\uc640 Java 21\uc758 \ucd5c\uc2e0 \uae30\ub2a5</li> </ul>"},{"location":"getting-started/introduction/#_8","title":"\ud83d\udcd6 \ub2e4\uc74c \ub2e8\uacc4","text":"<ul> <li>\uc124\uce58 \uac00\uc774\ub4dc: \ud504\ub85c\uc81d\ud2b8 \uc124\uce58 \ubc29\ubc95</li> <li>\ube60\ub978 \uc2dc\uc791: \ud504\ub85c\uc81d\ud2b8 \uc2e4\ud589 \ubc0f \uae30\ubcf8 \uc0ac\uc6a9\ubc95</li> <li>\ubaa8\ub4c8 \uac00\uc774\ub4dc: \uac01 \ubaa8\ub4c8\uc758 \uc0c1\uc138 \uc124\uba85</li> </ul>"},{"location":"getting-started/introduction/#_9","title":"\ud83e\udd1d \ucee4\ubba4\ub2c8\ud2f0","text":"<p>\uc9c8\ubb38\uc774\ub098 \uc81c\uc548\uc0ac\ud56d\uc774 \uc788\uc73c\uc2dc\uba74 GitHub Issues\ub97c \ud1b5\ud574 \ubb38\uc758\ud574\uc8fc\uc138\uc694.</p> <ul> <li>GitHub: https://github.com/yourusername/spring-multi-module</li> <li>Issues: https://github.com/yourusername/spring-multi-module/issues</li> </ul>"},{"location":"getting-started/quick-start/","title":"\ube60\ub978 \uc2dc\uc791","text":"<p>\ud504\ub85c\uc81d\ud2b8\ub97c \ube60\ub974\uac8c \uc2dc\uc791\ud558\ub294 \ubc29\ubc95\uc744 \uc548\ub0b4\ud569\ub2c8\ub2e4.</p>"},{"location":"getting-started/quick-start/#5","title":"\ud83d\ude80 5\ubd84 \uc548\uc5d0 \uc2dc\uc791\ud558\uae30","text":""},{"location":"getting-started/quick-start/#1","title":"1. \ud504\ub85c\uc81d\ud2b8 \ud074\ub860 \ubc0f \ube4c\ub4dc","text":"<pre><code>git clone https://github.com/yourusername/spring-multi-module.git\ncd spring-multi-module\n./gradlew build\n</code></pre>"},{"location":"getting-started/quick-start/#2-javadoc","title":"2. Javadoc \uc0dd\uc131","text":"<pre><code>./gradlew generateAllJavadocs\n</code></pre>"},{"location":"getting-started/quick-start/#3","title":"3. \ubb38\uc11c \ud655\uc778","text":"<pre><code>mkdocs serve\n</code></pre> <p>\ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c <code>http://127.0.0.1:8000</code> \uc811\uc18d</p>"},{"location":"getting-started/quick-start/#_2","title":"\ud83d\udca1 \uccab \ubc88\uc9f8 \uc608\uc81c","text":""},{"location":"getting-started/quick-start/#util-module","title":"Util Module \uc0ac\uc6a9\ud558\uae30","text":"<pre><code>import com.example.util.StringUtils;\nimport com.example.util.DateTimeUtils;\n\npublic class QuickStartExample {\n    public static void main(String[] args) {\n        StringUtils stringUtils = new StringUtils();\n        DateTimeUtils dateTimeUtils = new DateTimeUtils();\n\n        // \ubb38\uc790\uc5f4 \ucc98\ub9ac\n        String input = \"hello_world\";\n        String camelCase = stringUtils.toCamelCase(input);\n        System.out.println(camelCase); // \"helloWorld\"\n\n        // \ub0a0\uc9dc/\uc2dc\uac04 \ucc98\ub9ac\n        String now = dateTimeUtils.getCurrentDateTime();\n        System.out.println(now); // \"2025-10-25 14:30:00\"\n    }\n}\n</code></pre>"},{"location":"getting-started/quick-start/#encrypt-module","title":"Encrypt Module \uc0ac\uc6a9\ud558\uae30","text":"<pre><code>import com.example.encrypt.AesEncryptionService;\nimport com.example.encrypt.HashService;\n\npublic class EncryptionExample {\n    public static void main(String[] args) {\n        AesEncryptionService aes = new AesEncryptionService();\n        HashService hash = new HashService();\n\n        // AES \uc554\ud638\ud654\n        String secretKey = aes.generateSecretKey();\n        String encrypted = aes.encrypt(\"Hello World\", secretKey);\n        String decrypted = aes.decrypt(encrypted, secretKey);\n\n        System.out.println(\"Original: Hello World\");\n        System.out.println(\"Encrypted: \" + encrypted);\n        System.out.println(\"Decrypted: \" + decrypted);\n\n        // \ud574\uc2dc \uc0dd\uc131\n        String password = \"myPassword123\";\n        String hashed = hash.sha256(password);\n        System.out.println(\"Hashed: \" + hashed);\n    }\n}\n</code></pre>"},{"location":"getting-started/quick-start/#domain-module","title":"Domain Module \uc0ac\uc6a9\ud558\uae30","text":"<pre><code>import com.example.domain.entity.User;\nimport com.example.domain.service.UserService;\nimport com.example.domain.repository.UserRepository;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.context.ApplicationContext;\n\n@SpringBootApplication(scanBasePackages = \"com.example\")\npublic class DomainExample {\n    public static void main(String[] args) {\n        ApplicationContext context = SpringApplication.run(DomainExample.class, args);\n        UserService userService = context.getBean(UserService.class);\n\n        // \uc0ac\uc6a9\uc790 \ub4f1\ub85d\n        User newUser = new User(\"johndoe\", \"john@example.com\", \"password123\");\n        User registered = userService.registerUser(newUser);\n\n        System.out.println(\"User registered: \" + registered.getUsername());\n\n        // \uc0ac\uc6a9\uc790 \uc778\uc99d\n        boolean authenticated = userService.authenticate(\"johndoe\", \"password123\");\n        System.out.println(\"Authentication: \" + authenticated);\n    }\n}\n</code></pre>"},{"location":"getting-started/quick-start/#_3","title":"\ud83d\udcc1 \ud504\ub85c\uc81d\ud2b8 \uad6c\uc870 \uc774\ud574\ud558\uae30","text":"<pre><code>spring-multi-module/\n\u251c\u2500\u2500 build.gradle                 # \ub8e8\ud2b8 \ube4c\ub4dc \uc124\uc815\n\u251c\u2500\u2500 settings.gradle              # \ubaa8\ub4c8 \uc124\uc815\n\u251c\u2500\u2500 mkdocs.yml                   # MkDocs \uc124\uc815\n\u251c\u2500\u2500 docs/                        # \ubb38\uc11c \uc18c\uc2a4\n\u2502   \u251c\u2500\u2500 index.md\n\u2502   \u251c\u2500\u2500 modules/\n\u2502   \u251c\u2500\u2500 getting-started/\n\u2502   \u2514\u2500\u2500 javadoc/                # Javadoc \ucd9c\ub825 \ub514\ub809\ud1a0\ub9ac\n\u251c\u2500\u2500 util-module/                # \uc720\ud2f8\ub9ac\ud2f0 \ubaa8\ub4c8\n\u2502   \u251c\u2500\u2500 build.gradle\n\u2502   \u2514\u2500\u2500 src/\n\u2502       \u2514\u2500\u2500 main/java/\n\u2502           \u2514\u2500\u2500 com/example/util/\n\u251c\u2500\u2500 encrypt-module/              # \uc554\ud638\ud654 \ubaa8\ub4c8\n\u2502   \u251c\u2500\u2500 build.gradle\n\u2502   \u2514\u2500\u2500 src/\n\u2502       \u2514\u2500\u2500 main/java/\n\u2502           \u2514\u2500\u2500 com/example/encrypt/\n\u2514\u2500\u2500 domain-module/               # \ub3c4\uba54\uc778 \ubaa8\ub4c8\n    \u251c\u2500\u2500 build.gradle\n    \u2514\u2500\u2500 src/\n        \u2514\u2500\u2500 main/java/\n            \u2514\u2500\u2500 com/example/domain/\n</code></pre>"},{"location":"getting-started/quick-start/#gradle","title":"\ud83d\udd28 \uc8fc\uc694 Gradle \ud0dc\uc2a4\ud06c","text":""},{"location":"getting-started/quick-start/#_4","title":"\ube4c\ub4dc \uad00\ub828","text":"<pre><code># \uc804\uccb4 \ube4c\ub4dc\n./gradlew build\n\n# \ud074\ub9b0 \ube4c\ub4dc\n./gradlew clean build\n\n# \ud2b9\uc815 \ubaa8\ub4c8 \ube4c\ub4dc\n./gradlew :util-module:build\n</code></pre>"},{"location":"getting-started/quick-start/#_5","title":"\ud14c\uc2a4\ud2b8 \uad00\ub828","text":"<pre><code># \uc804\uccb4 \ud14c\uc2a4\ud2b8\n./gradlew test\n\n# \ud2b9\uc815 \ubaa8\ub4c8 \ud14c\uc2a4\ud2b8\n./gradlew :domain-module:test\n\n# \ud14c\uc2a4\ud2b8 \ub9ac\ud3ec\ud2b8 \uc0dd\uc131\n./gradlew test jacocoTestReport\n</code></pre>"},{"location":"getting-started/quick-start/#_6","title":"\ubb38\uc11c\ud654 \uad00\ub828","text":"<pre><code># \ubaa8\ub4e0 Javadoc \uc0dd\uc131\n./gradlew generateAllJavadocs\n\n# \ud2b9\uc815 \ubaa8\ub4c8 Javadoc \uc0dd\uc131\n./gradlew :util-module:generateModuleJavadoc\n\n# \ud1b5\ud569 Javadoc \uc0dd\uc131\n./gradlew generateAggregatedJavadoc\n</code></pre>"},{"location":"getting-started/quick-start/#_7","title":"\uc2e4\ud589 \uad00\ub828","text":"<pre><code># \uc758\uc874\uc131 \ud655\uc778\n./gradlew dependencies\n\n# \ud504\ub85c\uc81d\ud2b8 \uad6c\uc870 \ud655\uc778\n./gradlew projects\n\n# \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ud0dc\uc2a4\ud06c \ubaa9\ub85d\n./gradlew tasks\n</code></pre>"},{"location":"getting-started/quick-start/#_8","title":"\ud83d\udcda \ud559\uc2b5 \uacbd\ub85c","text":"<ol> <li>\uae30\ucd08 \uc774\ud574</li> <li>\ud504\ub85c\uc81d\ud2b8 \uc18c\uac1c</li> <li> <p>\uc124\uce58 \uac00\uc774\ub4dc</p> </li> <li> <p>\ubaa8\ub4c8 \ud559\uc2b5</p> </li> <li>Util Module</li> <li>Encrypt Module</li> <li> <p>Domain Module</p> </li> <li> <p>\uc2ec\ud654 \ud559\uc2b5</p> </li> <li>\uc544\ud0a4\ud14d\ucc98 \uac00\uc774\ub4dc</li> <li>\ucf54\ub529 \ucee8\ubca4\uc158</li> <li>\ud14c\uc2a4\ud2b8 \uac00\uc774\ub4dc</li> </ol>"},{"location":"getting-started/quick-start/#_9","title":"\ud83c\udfaf \uc77c\ubc18\uc801\uc778 \uc791\uc5c5 \ud750\ub984","text":""},{"location":"getting-started/quick-start/#1_1","title":"1. \uc0c8\ub85c\uc6b4 \uae30\ub2a5 \uac1c\ubc1c","text":"<pre><code># 1. \ube0c\ub79c\uce58 \uc0dd\uc131\ngit checkout -b feature/new-feature\n\n# 2. \ucf54\ub4dc \uc791\uc131\n# ... \ucf54\ub529 ...\n\n# 3. \ube4c\ub4dc \ubc0f \ud14c\uc2a4\ud2b8\n./gradlew clean build test\n\n# 4. Javadoc \uc5c5\ub370\uc774\ud2b8\n./gradlew generateAllJavadocs\n\n# 5. \ucee4\ubc0b \ubc0f \ud478\uc2dc\ngit add .\ngit commit -m \"Add new feature\"\ngit push origin feature/new-feature\n</code></pre>"},{"location":"getting-started/quick-start/#2","title":"2. \ubb38\uc11c \uc5c5\ub370\uc774\ud2b8","text":"<pre><code># 1. docs/ \ub514\ub809\ud1a0\ub9ac\uc5d0\uc11c \ub9c8\ud06c\ub2e4\uc6b4 \ud30c\uc77c \ud3b8\uc9d1\n# ... \ubb38\uc11c \uc791\uc131 ...\n\n# 2. \ub85c\uceec\uc5d0\uc11c \ubbf8\ub9ac\ubcf4\uae30\nmkdocs serve\n\n# 3. \ube4c\ub4dc \ud655\uc778\nmkdocs build\n\n# 4. \ucee4\ubc0b\ngit add docs/\ngit commit -m \"Update documentation\"\n</code></pre>"},{"location":"getting-started/quick-start/#3_1","title":"3. \uc0c8 \ubaa8\ub4c8 \ucd94\uac00","text":"<pre><code># 1. settings.gradle\uc5d0 \ubaa8\ub4c8 \ucd94\uac00\necho \"include 'new-module'\" &gt;&gt; settings.gradle\n\n# 2. \ubaa8\ub4c8 \ub514\ub809\ud1a0\ub9ac \uc0dd\uc131\nmkdir -p new-module/src/main/java/com/example/newmodule\n\n# 3. build.gradle \uc791\uc131\n# ... \ube4c\ub4dc \uc2a4\ud06c\ub9bd\ud2b8 \uc791\uc131 ...\n\n# 4. \ubb38\uc11c \uc791\uc131\nmkdir -p docs/modules\ntouch docs/modules/new-module.md\n\n# 5. mkdocs.yml\uc5d0 \ub124\ube44\uac8c\uc774\uc158 \ucd94\uac00\n# ... mkdocs.yml \uc218\uc815 ...\n</code></pre>"},{"location":"getting-started/quick-start/#_10","title":"\ud83d\udd0d \ub2e4\uc74c \ub2e8\uacc4","text":"<p>\ud504\ub85c\uc81d\ud2b8\ub97c \uc2dc\uc791\ud588\ub2e4\uba74 \ub2e4\uc74c \ubb38\uc11c\ub97c \ud655\uc778\ud558\uc138\uc694:</p> <ul> <li>\ubaa8\ub4c8 \uc0c1\uc138 \uac00\uc774\ub4dc: \uac01 \ubaa8\ub4c8\uc758 \uc790\uc138\ud55c \uc0ac\uc6a9\ubc95\uc744 \ud559\uc2b5\ud558\uc138\uc694</li> <li>API \ubb38\uc11c: Javadoc\uc73c\ub85c \uc0dd\uc131\ub41c API \ub808\ud37c\ub7f0\uc2a4\ub97c \ucc38\uc870\ud558\uc138\uc694</li> <li>\uac1c\ubc1c \uac00\uc774\ub4dc: \ud504\ub85c\uc81d\ud2b8 \uac1c\ubc1c\uc5d0 \ucc38\uc5ec\ud558\ub294 \ubc29\ubc95\uc744 \uc54c\uc544\ubcf4\uc138\uc694</li> </ul>"},{"location":"getting-started/quick-start/#_11","title":"\u2753 \uc790\uc8fc \ubb3b\ub294 \uc9c8\ubb38","text":""},{"location":"getting-started/quick-start/#q1","title":"Q1. \ubaa8\ub4c8\uc744 \ub3c5\ub9bd\uc801\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub098\uc694?","text":"<p>\ub124, \uac01 \ubaa8\ub4c8\uc740 \ub3c5\ub9bd\uc801\uc778 JAR\ub85c \ube4c\ub4dc\ub418\uba70 \ub2e4\ub978 \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p>"},{"location":"getting-started/quick-start/#q2-javadoc","title":"Q2. Javadoc\uc774 \uc0dd\uc131\ub418\uc9c0 \uc54a\uc544\uc694","text":"<p><code>docs/javadoc/</code> \ub514\ub809\ud1a0\ub9ac\uac00 \uc874\uc7ac\ud558\ub294\uc9c0 \ud655\uc778\ud558\uace0, <code>./gradlew generateAllJavadocs</code>\ub97c \uc2e4\ud589\ud558\uc138\uc694.</p>"},{"location":"getting-started/quick-start/#q3-mkdocs-javadoc","title":"Q3. MkDocs\uc5d0\uc11c Javadoc \ub9c1\ud06c\uac00 \uc791\ub3d9\ud558\uc9c0 \uc54a\uc544\uc694","text":"<p>Javadoc\uc744 \uba3c\uc800 \uc0dd\uc131\ud55c \ud6c4 MkDocs\ub97c \ube4c\ub4dc\ud574\uc57c \ud569\ub2c8\ub2e4.</p> <pre><code>./gradlew generateAllJavadocs\nmkdocs build\n</code></pre>"},{"location":"getting-started/quick-start/#q4-github-pages","title":"Q4. GitHub Pages\uc5d0 \ubc30\ud3ec\ud558\ub824\uba74?","text":"<pre><code>mkdocs gh-deploy\n</code></pre> <p>\ub354 \ub9ce\uc740 \uc9c8\ubb38\uc740 GitHub Issues\uc5d0\uc11c \ud655\uc778\ud558\uc138\uc694.</p>"},{"location":"modules/domain-module/","title":"Domain Module","text":"<p>\uc0ac\uc6a9\uc790 \uad00\ub9ac\ub97c \uc704\ud55c \ub3c4\uba54\uc778 \ubaa8\ub378, \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac, \uc11c\ube44\uc2a4\ub97c \uc81c\uacf5\ud558\ub294 \ubaa8\ub4c8\uc785\ub2c8\ub2e4.</p>"},{"location":"modules/domain-module/#_1","title":"\ud83d\udce6 \uc758\uc874\uc131","text":"<pre><code>dependencies {\n    implementation project(':domain-module')\n}\n</code></pre> <p>\uc774 \ubaa8\ub4c8\uc740 <code>util-module</code>\uacfc <code>encrypt-module</code>\uc5d0 \uc758\uc874\ud569\ub2c8\ub2e4.</p>"},{"location":"modules/domain-module/#_2","title":"\ud83c\udfd7\ufe0f \uc544\ud0a4\ud14d\ucc98","text":"<p>Domain Module\uc740 \ub2e4\uc74c\uacfc \uac19\uc740 \ub808\uc774\uc5b4\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4:</p> <pre><code>domain-module/\n\u251c\u2500\u2500 entity/           # JPA \uc5d4\ud2f0\ud2f0\n\u251c\u2500\u2500 repository/       # Spring Data JPA \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\n\u2514\u2500\u2500 service/          # \ube44\uc988\ub2c8\uc2a4 \ub85c\uc9c1\n</code></pre>"},{"location":"modules/domain-module/#_3","title":"\ud83d\udd27 \uc8fc\uc694 \uad6c\uc131\uc694\uc18c","text":""},{"location":"modules/domain-module/#user-entity","title":"User Entity","text":"<p>\uc0ac\uc6a9\uc790 \uc815\ubcf4\ub97c \ub098\ud0c0\ub0b4\ub294 JPA \uc5d4\ud2f0\ud2f0\uc785\ub2c8\ub2e4.</p>"},{"location":"modules/domain-module/#_4","title":"\ud544\ub4dc","text":"\ud544\ub4dc \ud0c0\uc785 \uc124\uba85 \uc81c\uc57d\uc870\uac74 id Long \uc0ac\uc6a9\uc790 ID Primary Key, Auto Increment username String \uc0ac\uc6a9\uc790 \uc774\ub984 Unique, Not Null, 3-50\uc790 email String \uc774\uba54\uc77c Unique, Not Null, Email \ud615\uc2dd password String \ube44\ubc00\ubc88\ud638 (\ud574\uc2dc) Not Null enabled Boolean \ud65c\uc131\ud654 \uc5ec\ubd80 Not Null, \uae30\ubcf8\uac12: true createdAt LocalDateTime \uc0dd\uc131 \uc77c\uc2dc Not Null, \uc790\ub3d9 \uc124\uc815 updatedAt LocalDateTime \uc218\uc815 \uc77c\uc2dc Not Null, \uc790\ub3d9 \uac31\uc2e0"},{"location":"modules/domain-module/#_5","title":"\uc608\uc81c","text":"<pre><code>User user = new User();\nuser.setUsername(\"johndoe\");\nuser.setEmail(\"john@example.com\");\nuser.setPassword(\"password123\");\nuser.setEnabled(true);\n</code></pre>"},{"location":"modules/domain-module/#userrepository","title":"UserRepository","text":"<p>User \uc5d4\ud2f0\ud2f0\uc5d0 \ub300\ud55c \ub370\uc774\ud130 \uc561\uc138\uc2a4 \uc778\ud130\ud398\uc774\uc2a4\uc785\ub2c8\ub2e4.</p>"},{"location":"modules/domain-module/#_6","title":"\uc8fc\uc694 \uba54\uc11c\ub4dc","text":"<p>findByUsername(String username)</p> <p>\uc0ac\uc6a9\uc790 \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\uc790\ub97c \uc870\ud68c\ud569\ub2c8\ub2e4.</p> <pre><code>Optional&lt;User&gt; user = userRepository.findByUsername(\"johndoe\");\n</code></pre> <p>findByEmail(String email)</p> <p>\uc774\uba54\uc77c\ub85c \uc0ac\uc6a9\uc790\ub97c \uc870\ud68c\ud569\ub2c8\ub2e4.</p> <pre><code>Optional&lt;User&gt; user = userRepository.findByEmail(\"john@example.com\");\n</code></pre> <p>existsByUsername(String username)</p> <p>\uc0ac\uc6a9\uc790 \uc774\ub984\uc774 \uc874\uc7ac\ud558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4.</p> <pre><code>boolean exists = userRepository.existsByUsername(\"johndoe\");\n</code></pre> <p>existsByEmail(String email)</p> <p>\uc774\uba54\uc77c\uc774 \uc874\uc7ac\ud558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4.</p> <pre><code>boolean exists = userRepository.existsByEmail(\"john@example.com\");\n</code></pre>"},{"location":"modules/domain-module/#userservice","title":"UserService","text":"<p>\uc0ac\uc6a9\uc790 \uad00\ub828 \ube44\uc988\ub2c8\uc2a4 \ub85c\uc9c1\uc744 \ucc98\ub9ac\ud558\ub294 \uc11c\ube44\uc2a4\uc785\ub2c8\ub2e4.</p>"},{"location":"modules/domain-module/#_7","title":"\uc8fc\uc694 \uba54\uc11c\ub4dc","text":"<p>registerUser(User user)</p> <p>\uc0c8\ub85c\uc6b4 \uc0ac\uc6a9\uc790\ub97c \ub4f1\ub85d\ud569\ub2c8\ub2e4. \ube44\ubc00\ubc88\ud638\ub294 \uc790\ub3d9\uc73c\ub85c SHA-256 \ud574\uc2dc\ub85c \uc554\ud638\ud654\ub429\ub2c8\ub2e4.</p> <pre><code>User newUser = new User(\"johndoe\", \"john@example.com\", \"password123\");\nUser registered = userService.registerUser(newUser);\n</code></pre> <p>findById(Long id)</p> <p>\uc0ac\uc6a9\uc790 ID\ub85c \uc0ac\uc6a9\uc790\ub97c \uc870\ud68c\ud569\ub2c8\ub2e4.</p> <pre><code>Optional&lt;User&gt; user = userService.findById(1L);\n</code></pre> <p>findByUsername(String username)</p> <p>\uc0ac\uc6a9\uc790 \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\uc790\ub97c \uc870\ud68c\ud569\ub2c8\ub2e4.</p> <pre><code>Optional&lt;User&gt; user = userService.findByUsername(\"johndoe\");\n</code></pre> <p>findAllUsers()</p> <p>\ubaa8\ub4e0 \uc0ac\uc6a9\uc790\ub97c \uc870\ud68c\ud569\ub2c8\ub2e4.</p> <pre><code>List&lt;User&gt; users = userService.findAllUsers();\n</code></pre> <p>updateUser(Long id, User updatedUser)</p> <p>\uc0ac\uc6a9\uc790 \uc815\ubcf4\ub97c \uc218\uc815\ud569\ub2c8\ub2e4.</p> <pre><code>User updates = new User();\nupdates.setEmail(\"newemail@example.com\");\nupdates.setEnabled(false);\n\nUser updated = userService.updateUser(1L, updates);\n</code></pre> <p>deleteUser(Long id)</p> <p>\uc0ac\uc6a9\uc790\ub97c \uc0ad\uc81c\ud569\ub2c8\ub2e4.</p> <pre><code>userService.deleteUser(1L);\n</code></pre> <p>authenticate(String username, String password)</p> <p>\uc0ac\uc6a9\uc790 \uc778\uc99d\uc744 \uc218\ud589\ud569\ub2c8\ub2e4.</p> <pre><code>boolean authenticated = userService.authenticate(\"johndoe\", \"password123\");\n</code></pre>"},{"location":"modules/domain-module/#api","title":"\ud83d\udcd6 API \ubb38\uc11c","text":"<p>\ub354 \uc790\uc138\ud55c API \ubb38\uc11c\ub294 Javadoc\uc744 \ucc38\uc870\ud558\uc138\uc694.</p>"},{"location":"modules/domain-module/#_8","title":"\ud83d\udca1 \uc0ac\uc6a9 \uc608\uc81c","text":""},{"location":"modules/domain-module/#spring-boot","title":"Spring Boot \ucee8\ud2b8\ub864\ub7ec\uc5d0\uc11c \uc0ac\uc6a9","text":"<pre><code>import com.example.domain.entity.User;\nimport com.example.domain.service.UserService;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.*;\n\n@RestController\n@RequestMapping(\"/api/users\")\npublic class UserController {\n\n    private final UserService userService;\n\n    public UserController(UserService userService) {\n        this.userService = userService;\n    }\n\n    @PostMapping(\"/register\")\n    public ResponseEntity&lt;User&gt; register(@RequestBody User user) {\n        try {\n            User registered = userService.registerUser(user);\n            return ResponseEntity.ok(registered);\n        } catch (IllegalArgumentException e) {\n            return ResponseEntity.badRequest().build();\n        }\n    }\n\n    @GetMapping(\"/{id}\")\n    public ResponseEntity&lt;User&gt; getUser(@PathVariable Long id) {\n        return userService.findById(id)\n            .map(ResponseEntity::ok)\n            .orElse(ResponseEntity.notFound().build());\n    }\n\n    @PostMapping(\"/login\")\n    public ResponseEntity&lt;String&gt; login(@RequestParam String username, \n                                       @RequestParam String password) {\n        boolean authenticated = userService.authenticate(username, password);\n        if (authenticated) {\n            return ResponseEntity.ok(\"Login successful\");\n        }\n        return ResponseEntity.status(401).body(\"Invalid credentials\");\n    }\n}\n</code></pre>"},{"location":"modules/domain-module/#_9","title":"\ud83d\uddc4\ufe0f \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc124\uc815","text":""},{"location":"modules/domain-module/#h2","title":"H2 \ub370\uc774\ud130\ubca0\uc774\uc2a4 (\uac1c\ubc1c\uc6a9)","text":"<pre><code># application.yml\nspring:\n  datasource:\n    url: jdbc:h2:mem:testdb\n    driver-class-name: org.h2.Driver\n    username: sa\n    password:\n  h2:\n    console:\n      enabled: true\n  jpa:\n    hibernate:\n      ddl-auto: create-drop\n    show-sql: true\n</code></pre>"},{"location":"modules/domain-module/#postgresql","title":"PostgreSQL (\uc6b4\uc601\uc6a9)","text":"<pre><code># application-prod.yml\nspring:\n  datasource:\n    url: jdbc:postgresql://localhost:5432/mydb\n    username: ${DB_USERNAME}\n    password: ${DB_PASSWORD}\n  jpa:\n    hibernate:\n      ddl-auto: validate\n    show-sql: false\n</code></pre>"},{"location":"modules/domain-module/#_10","title":"\ud83e\uddea \ud14c\uc2a4\ud2b8","text":"<pre><code>./gradlew :domain-module:test\n</code></pre>"},{"location":"modules/domain-module/#_11","title":"\ud83d\udd12 \ubcf4\uc548 \uace0\ub824\uc0ac\ud56d","text":"<ol> <li>\ube44\ubc00\ubc88\ud638 \uc800\uc7a5: \ube44\ubc00\ubc88\ud638\ub294 SHA-256\uc73c\ub85c \ud574\uc2dc\ub418\uc5b4 \uc800\uc7a5\ub429\ub2c8\ub2e4.</li> <li>\uc785\ub825 \uac80\uc99d: Jakarta Validation\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc785\ub825\uac12\uc744 \uac80\uc99d\ud569\ub2c8\ub2e4.</li> <li>\ud2b8\ub79c\uc7ad\uc158 \uad00\ub9ac: @Transactional\uc744 \ud1b5\ud574 \ub370\uc774\ud130 \uc77c\uad00\uc131\uc744 \ubcf4\uc7a5\ud569\ub2c8\ub2e4.</li> </ol> <p>\uad8c\uc7a5\uc0ac\ud56d</p> <p>\uc2e4\uc81c \uc6b4\uc601 \ud658\uacbd\uc5d0\uc11c\ub294 \ube44\ubc00\ubc88\ud638 \ud574\uc2f1 \uc2dc BCrypt\ub098 Argon2\uc640 \uac19\uc740 \ub354 \uac15\ub825\ud55c \uc54c\uace0\ub9ac\uc998\uc744 \uc0ac\uc6a9\ud558\uace0, Salt\ub97c \ucd94\uac00\ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4.</p>"},{"location":"modules/domain-module/#_12","title":"\ud83d\udcda \uad00\ub828 \ubb38\uc11c","text":"<ul> <li>Util Module</li> <li>Encrypt Module</li> <li>\uc544\ud0a4\ud14d\ucc98 \uac00\uc774\ub4dc</li> </ul>"},{"location":"modules/encrypt-module/","title":"Encrypt Module","text":"<p>\uc554\ud638\ud654, \ubcf5\ud638\ud654, \ud574\uc2dc \uc0dd\uc131 \ub4f1 \ubcf4\uc548 \uad00\ub828 \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ub294 \ubaa8\ub4c8\uc785\ub2c8\ub2e4.</p>"},{"location":"modules/encrypt-module/#_1","title":"\ud83d\udce6 \uc758\uc874\uc131","text":"<pre><code>dependencies {\n    implementation project(':encrypt-module')\n}\n</code></pre> <p>\uc774 \ubaa8\ub4c8\uc740 \ub0b4\ubd80\uc801\uc73c\ub85c <code>util-module</code>\uc5d0 \uc758\uc874\ud569\ub2c8\ub2e4.</p>"},{"location":"modules/encrypt-module/#_2","title":"\ud83d\udd27 \uc8fc\uc694 \uae30\ub2a5","text":""},{"location":"modules/encrypt-module/#aesencryptionservice","title":"AesEncryptionService","text":"<p>AES \uc54c\uace0\ub9ac\uc998\uc744 \uc0ac\uc6a9\ud55c \uc554\ud638\ud654/\ubcf5\ud638\ud654 \uc11c\ube44\uc2a4\uc785\ub2c8\ub2e4.</p>"},{"location":"modules/encrypt-module/#_3","title":"\uc8fc\uc694 \uba54\uc11c\ub4dc","text":"<p>generateSecretKey()</p> <p>AES \uc554\ud638\ud654\uc5d0 \uc0ac\uc6a9\ud560 \ube44\ubc00\ud0a4\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.</p> <pre><code>AesEncryptionService aes = new AesEncryptionService();\nString secretKey = aes.generateSecretKey();\n// Base64\ub85c \uc778\ucf54\ub529\ub41c 256\ube44\ud2b8 \ud0a4 \ubc18\ud658\n</code></pre> <p>encrypt(String plainText, String secretKey)</p> <p>\ud3c9\ubb38 \ud14d\uc2a4\ud2b8\ub97c \uc554\ud638\ud654\ud569\ub2c8\ub2e4.</p> <pre><code>String encrypted = aes.encrypt(\"Hello World\", secretKey);\n// Base64\ub85c \uc778\ucf54\ub529\ub41c \uc554\ud638\ud654\ub41c \ud14d\uc2a4\ud2b8 \ubc18\ud658\n</code></pre> <p>decrypt(String encryptedText, String secretKey)</p> <p>\uc554\ud638\ud654\ub41c \ud14d\uc2a4\ud2b8\ub97c \ubcf5\ud638\ud654\ud569\ub2c8\ub2e4.</p> <pre><code>String decrypted = aes.decrypt(encrypted, secretKey);\n// \"Hello World\"\n</code></pre>"},{"location":"modules/encrypt-module/#hashservice","title":"HashService","text":"<p>\ub2e4\uc591\ud55c \ud574\uc2dc \uc54c\uace0\ub9ac\uc998\uc744 \uc81c\uacf5\ud558\ub294 \uc11c\ube44\uc2a4\uc785\ub2c8\ub2e4.</p>"},{"location":"modules/encrypt-module/#_4","title":"\uc8fc\uc694 \uba54\uc11c\ub4dc","text":"<p>sha256(String input)</p> <p>SHA-256 \ud574\uc2dc\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.</p> <pre><code>HashService hashService = new HashService();\nString hash = hashService.sha256(\"password123\");\n// 16\uc9c4\uc218 \ubb38\uc790\uc5f4\ub85c \uc778\ucf54\ub529\ub41c \ud574\uc2dc \uac12 \ubc18\ud658\n</code></pre> <p>md5(String input) \u26a0\ufe0f Deprecated</p> <p>MD5 \ud574\uc2dc\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. (\ubcf4\uc548\uc0c1 \ucde8\uc57d\ud558\ubbc0\ub85c \uc0ac\uc6a9 \uad8c\uc7a5\ud558\uc9c0 \uc54a\uc74c)</p> <pre><code>@Deprecated\nString hash = hashService.md5(\"password123\");\n</code></pre> <p>\ubcf4\uc548 \uc8fc\uc758\uc0ac\ud56d</p> <p>MD5\ub294 \ubcf4\uc548\uc0c1 \ucde8\uc57d\ud558\ubbc0\ub85c \uc911\uc694\ud55c \ub370\uc774\ud130\uc5d0\ub294 SHA-256\uc744 \uc0ac\uc6a9\ud558\uc138\uc694.</p> <p>base64Encode(String input)</p> <p>Base64 \uc778\ucf54\ub529\uc744 \uc218\ud589\ud569\ub2c8\ub2e4.</p> <pre><code>String encoded = hashService.base64Encode(\"Hello World\");\n// \"SGVsbG8gV29ybGQ=\"\n</code></pre> <p>base64Decode(String encoded)</p> <p>Base64 \ub514\ucf54\ub529\uc744 \uc218\ud589\ud569\ub2c8\ub2e4.</p> <pre><code>String decoded = hashService.base64Decode(\"SGVsbG8gV29ybGQ=\");\n// \"Hello World\"\n</code></pre>"},{"location":"modules/encrypt-module/#api","title":"\ud83d\udcd6 API \ubb38\uc11c","text":"<p>\ub354 \uc790\uc138\ud55c API \ubb38\uc11c\ub294 Javadoc\uc744 \ucc38\uc870\ud558\uc138\uc694.</p>"},{"location":"modules/encrypt-module/#_5","title":"\ud83d\udca1 \uc0ac\uc6a9 \uc608\uc81c","text":""},{"location":"modules/encrypt-module/#_6","title":"\ub370\uc774\ud130 \uc554\ud638\ud654 \ubc0f \ubcf5\ud638\ud654","text":"<pre><code>import com.example.encrypt.AesEncryptionService;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class SecureDataService {\n\n    private final AesEncryptionService aesService;\n    private final String secretKey;\n\n    public SecureDataService(AesEncryptionService aesService) {\n        this.aesService = aesService;\n        // \uc2e4\uc81c \uc6b4\uc601\uc5d0\uc11c\ub294 \ud658\uacbd \ubcc0\uc218\ub098 \uc124\uc815 \ud30c\uc77c\uc5d0\uc11c \ub85c\ub4dc\n        this.secretKey = aesService.generateSecretKey();\n    }\n\n    public String encryptSensitiveData(String data) {\n        return aesService.encrypt(data, secretKey);\n    }\n\n    public String decryptSensitiveData(String encryptedData) {\n        return aesService.decrypt(encryptedData, secretKey);\n    }\n}\n</code></pre>"},{"location":"modules/encrypt-module/#_7","title":"\ube44\ubc00\ubc88\ud638 \ud574\uc2f1","text":"<pre><code>import com.example.encrypt.HashService;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class PasswordService {\n\n    private final HashService hashService;\n\n    public PasswordService(HashService hashService) {\n        this.hashService = hashService;\n    }\n\n    public String hashPassword(String password) {\n        return hashService.sha256(password);\n    }\n\n    public boolean verifyPassword(String password, String hashedPassword) {\n        String hash = hashService.sha256(password);\n        return hash.equals(hashedPassword);\n    }\n}\n</code></pre>"},{"location":"modules/encrypt-module/#_8","title":"\ud83d\udd12 \ubcf4\uc548 \uad8c\uc7a5\uc0ac\ud56d","text":"<ol> <li>\ube44\ubc00\ud0a4 \uad00\ub9ac: AES \ube44\ubc00\ud0a4\ub294 \ud658\uacbd \ubcc0\uc218\ub098 \ubcf4\uc548 \ubcfc\ud2b8\uc5d0 \uc800\uc7a5\ud558\uc138\uc694.</li> <li>\ud574\uc2dc \uc54c\uace0\ub9ac\uc998: \ube44\ubc00\ubc88\ud638 \ud574\uc2f1\uc5d0\ub294 SHA-256\uc744 \uc0ac\uc6a9\ud558\uc138\uc694. MD5\ub294 \uc0ac\uc6a9\ud558\uc9c0 \ub9c8\uc138\uc694.</li> <li>Salt \ucd94\uac00: \uc2e4\uc81c \uc6b4\uc601 \ud658\uacbd\uc5d0\uc11c\ub294 \ube44\ubc00\ubc88\ud638 \ud574\uc2f1 \uc2dc Salt\ub97c \ucd94\uac00\ud558\uc138\uc694.</li> <li>\ud0a4 \ub85c\ud14c\uc774\uc158: \uc8fc\uae30\uc801\uc73c\ub85c \uc554\ud638\ud654 \ud0a4\ub97c \uad50\uccb4\ud558\uc138\uc694.</li> </ol>"},{"location":"modules/encrypt-module/#_9","title":"\ud83e\uddea \ud14c\uc2a4\ud2b8","text":"<pre><code>./gradlew :encrypt-module:test\n</code></pre>"},{"location":"modules/encrypt-module/#_10","title":"\ud83d\udcda \ucc38\uace0 \uc790\ub8cc","text":"<ul> <li>AES \uc554\ud638\ud654 \ud45c\uc900</li> <li>SHA-256 \ud574\uc2dc \ud568\uc218</li> <li>BouncyCastle \ub77c\uc774\ube0c\ub7ec\ub9ac</li> </ul>"},{"location":"modules/util-module/","title":"Util Module","text":"<p>\uacf5\ud1b5 \uc720\ud2f8\ub9ac\ud2f0 \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ub294 \ubaa8\ub4c8\uc785\ub2c8\ub2e4.</p>"},{"location":"modules/util-module/#_1","title":"\ud83d\udce6 \uc758\uc874\uc131","text":"<pre><code>dependencies {\n    implementation project(':util-module')\n}\n</code></pre>"},{"location":"modules/util-module/#_2","title":"\ud83d\udd27 \uc8fc\uc694 \uae30\ub2a5","text":""},{"location":"modules/util-module/#stringutils","title":"StringUtils","text":"<p>\ubb38\uc790\uc5f4 \ucc98\ub9ac\ub97c \uc704\ud55c \uc720\ud2f8\ub9ac\ud2f0 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4.</p>"},{"location":"modules/util-module/#_3","title":"\uc8fc\uc694 \uba54\uc11c\ub4dc","text":"<p>isEmpty(String str)</p> <p>\ubb38\uc790\uc5f4\uc774 \ube44\uc5b4\uc788\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4.</p> <pre><code>StringUtils stringUtils = new StringUtils();\nboolean result = stringUtils.isEmpty(\"\"); // true\nboolean result2 = stringUtils.isEmpty(\"hello\"); // false\n</code></pre> <p>isNotEmpty(String str)</p> <p>\ubb38\uc790\uc5f4\uc774 \ube44\uc5b4\uc788\uc9c0 \uc54a\uc740\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4.</p> <pre><code>boolean result = stringUtils.isNotEmpty(\"hello\"); // true\n</code></pre> <p>toCamelCase(String str)</p> <p>\ubb38\uc790\uc5f4\uc744 \uce74\uba5c \ucf00\uc774\uc2a4\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4.</p> <pre><code>String result = stringUtils.toCamelCase(\"hello_world\"); // \"helloWorld\"\nString result2 = stringUtils.toCamelCase(\"hello-world\"); // \"helloWorld\"\n</code></pre>"},{"location":"modules/util-module/#datetimeutils","title":"DateTimeUtils","text":"<p>\ub0a0\uc9dc\uc640 \uc2dc\uac04 \ucc98\ub9ac\ub97c \uc704\ud55c \uc720\ud2f8\ub9ac\ud2f0 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4.</p>"},{"location":"modules/util-module/#_4","title":"\uc8fc\uc694 \uba54\uc11c\ub4dc","text":"<p>getCurrentDateTime()</p> <p>\ud604\uc7ac \ub0a0\uc9dc\uc640 \uc2dc\uac04\uc744 \uae30\ubcf8 \ud3ec\ub9f7\uc73c\ub85c \ubc18\ud658\ud569\ub2c8\ub2e4.</p> <pre><code>DateTimeUtils dateTimeUtils = new DateTimeUtils();\nString now = dateTimeUtils.getCurrentDateTime();\n// \uc608: \"2025-10-25 14:30:00\"\n</code></pre> <p>formatDateTime(LocalDateTime dateTime, String pattern)</p> <p>LocalDateTime\uc744 \uc9c0\uc815\ub41c \ud3ec\ub9f7\uc73c\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4.</p> <pre><code>LocalDateTime now = LocalDateTime.now();\nString formatted = dateTimeUtils.formatDateTime(now, \"yyyy\ub144 MM\uc6d4 dd\uc77c\");\n// \uc608: \"2025\ub144 10\uc6d4 25\uc77c\"\n</code></pre> <p>daysBetween(LocalDateTime start, LocalDateTime end)</p> <p>\ub450 \ub0a0\uc9dc \uc0ac\uc774\uc758 \uc77c\uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.</p> <pre><code>LocalDateTime start = LocalDateTime.of(2025, 1, 1, 0, 0);\nLocalDateTime end = LocalDateTime.of(2025, 1, 10, 0, 0);\nlong days = dateTimeUtils.daysBetween(start, end); // 9\n</code></pre>"},{"location":"modules/util-module/#api","title":"\ud83d\udcd6 API \ubb38\uc11c","text":"<p>\ub354 \uc790\uc138\ud55c API \ubb38\uc11c\ub294 Javadoc\uc744 \ucc38\uc870\ud558\uc138\uc694.</p>"},{"location":"modules/util-module/#_5","title":"\ud83d\udca1 \uc0ac\uc6a9 \uc608\uc81c","text":""},{"location":"modules/util-module/#spring-boot","title":"Spring Boot \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \uc0ac\uc6a9","text":"<pre><code>import com.example.util.StringUtils;\nimport com.example.util.DateTimeUtils;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class MyService {\n\n    private final StringUtils stringUtils;\n    private final DateTimeUtils dateTimeUtils;\n\n    public MyService(StringUtils stringUtils, DateTimeUtils dateTimeUtils) {\n        this.stringUtils = stringUtils;\n        this.dateTimeUtils = dateTimeUtils;\n    }\n\n    public void processData(String input) {\n        if (stringUtils.isNotEmpty(input)) {\n            String camelCase = stringUtils.toCamelCase(input);\n            String timestamp = dateTimeUtils.getCurrentDateTime();\n\n            System.out.println(\"Processed: \" + camelCase + \" at \" + timestamp);\n        }\n    }\n}\n</code></pre>"},{"location":"modules/util-module/#_6","title":"\ud83e\uddea \ud14c\uc2a4\ud2b8","text":"<pre><code>./gradlew :util-module:test\n</code></pre>"},{"location":"modules/util-module/#_7","title":"\ud83d\udcdd \ucc38\uace0\uc0ac\ud56d","text":"<ul> <li>\ubaa8\ub4e0 \uba54\uc11c\ub4dc\ub294 null-safe\ud558\uac8c \uc124\uacc4\ub418\uc5c8\uc2b5\ub2c8\ub2e4.</li> <li>\uc798\ubabb\ub41c \uc785\ub825\uc5d0 \ub300\ud574\uc11c\ub294 IllegalArgumentException\uc774 \ubc1c\uc0dd\ud569\ub2c8\ub2e4.</li> <li>StringUtils\ub294 Spring\uc758 @Component\ub85c \ub4f1\ub85d\ub418\uc5b4 \uc788\uc5b4 \uc758\uc874\uc131 \uc8fc\uc785\uc774 \uac00\ub2a5\ud569\ub2c8\ub2e4.</li> </ul>"}]}